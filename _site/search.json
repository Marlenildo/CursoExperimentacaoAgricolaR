[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Este material serve como guia para o curso Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola.\nCada aula cont√©m explica√ß√µes te√≥ricas resumidas e c√≥digos pr√°ticos para serem executados no RStudio.\n\n\nObjetivo: Familiarizar o aluno com R, RStudio e a prepara√ß√£o correta dos dados.\n\n\n\nO que √© R e RStudio\nInstala√ß√£o passo a passo\nEstrutura do RStudio (console, script, environment, plots, packages)\n\n\n\n\n\nComandos b√°sicos\nOperadores aritm√©ticos e l√≥gicos\nCriando e manipulando objetos\n\n\n\n\n\ninstall.packages(), library()\nPacotes √∫teis: tidyverse, readxl, agricolae, emmeans, broom, ggplot2\nComo procurar ajuda e documenta√ß√£o\n\n\n\n\n\nComo estruturar dados no Excel (linhas = observa√ß√µes, colunas = vari√°veis)\nImporta√ß√£o de arquivos (.csv, .xlsx, .txt)\nUso de read.csv(), readxl::read_excel(), read.table()\nVerifica√ß√£o e limpeza dos dados (head(), str(), summary())\n\n\n\n\n\n\nObjetivo: Aprender a organizar, transformar e explorar dados antes da an√°lise.\n\n\n\ndplyr: select(), filter(), mutate(), summarise(), group_by()\ntidyr: pivot_longer(), pivot_wider()\n\n\n\n\n\nM√©dias, desvios-padr√£o, erro-padr√£o\nTabelas resumo com dplyr\nVisualiza√ß√µes iniciais: histogramas, boxplots, gr√°ficos de barras\n\n\n\n\n\nEstrutura do ggplot2\nGr√°ficos b√°sicos aplicados a dados de experimenta√ß√£o agr√≠cola\nPersonaliza√ß√£o de gr√°ficos\n\n\n\n\n\nDelineamentos b√°sicos: DIC, DBC\nEstrutura dos dados em experimenta√ß√£o agr√≠cola\nPrepara√ß√£o dos dados no Excel para cada delineamento\n\n\n\n\n\n\nObjetivo: Ensinar a rodar ANOVA, verificar pressupostos e interpretar resultados, utilizando diferentes pacotes.\n\n\n\nFun√ß√µes base: aov()\nANOVA com ExpDes.pt (dic())\nANOVA com easyanova\n\n\n\n\n\nFun√ß√µes base: aov()\nANOVA com ExpDes.pt (dbc())\nCompara√ß√£o da sa√≠da entre pacotes\n\n\n\n\n\nNormalidade dos res√≠duos: shapiro.test(), rstatix::shapiro_test()\nHomogeneidade: bartlett.test(), car::leveneTest(), rstatix::levene_test()\nInterpreta√ß√£o pr√°tica\n\n\n\n\n\nTukeyHSD() (base R)\nExpDes.pt (j√° integrado √† ANOVA)\nemmeans + cld()\nrstatix::t_test() e rstatix::anova_test()\n\n\n\n\n\nDois fatores com aov()\nDois fatores com ExpDes.pt::fat2.dic() e fat2.dbc()\nInterpreta√ß√£o das intera√ß√µes\n\n\n\n\n\nEstrutura de dados\nExpDes.pt::psub2.dbc() (ou fun√ß√µes equivalentes)\nModelos mistos com lme4::lmer()\n\n\n\n\n\nbroom::tidy() para organizar tabelas\nExporta√ß√£o de resultados com rstatix (get_anova_table())\nApresenta√ß√£o de m√©dias e letras com agricolae, emmeans e ExpDes.pt\n\n\n\n\n\nMesmos dados analisados em aov(), ExpDes.pt, easyanova e rstatix\nDiscuss√£o: qual usar em cada situa√ß√£o\n\n\n\n\n\n\nObjetivo: Introduzir regress√£o e aplica√ß√µes em experimenta√ß√£o agr√≠cola.\n\n\n\nConceito, ajuste com lm()\nGr√°ficos de regress√£o no ggplot2\n\n\n\n\n\nlm(y ~ poly(x, 2))\nAplica√ß√µes em curvas de dose, tempo, crescimento\n\n\n\n\n\nCrit√©rios AIC e BIC\nCompara√ß√£o de modelos\n\n\n\n\n\nnls()\nAjuste de curvas de resposta √† dose\n\n\n\n\n\nglm(family = binomial)\nExemplos em fitossanidade e sobreviv√™ncia\n\n\n\n\n\n\n\n\n\nObjetivo: Consolidar o aprendizado com aplica√ß√µes pr√°ticas.\n\n\n\nUso do RMarkdown\nExportar para Word e PDF\nOrganiza√ß√£o dos resultados\n\n\n\n\nCada aluno analisa um banco de dados de experimenta√ß√£o agr√≠cola.\nEntrega de relat√≥rio com:\n\nEstrutura dos dados\nANOVA + testes de m√©dias ou regress√£o\nGr√°ficos e tabelas\nInterpreta√ß√£o\n\n\n\n\n\n\n\nSemanas 1-2: R, RStudio, pacotes, organiza√ß√£o/importa√ß√£o de dados\n\nSemanas 3-4: Manipula√ß√£o de dados, gr√°ficos, delineamentos\n\nSemanas 5-8: ANOVA com base R, ExpDes.pt, easyanova e rstatix\n\nSemanas 9-11: Regress√£o (linear, polinomial, n√£o linear, log√≠stica)\n\nSemana 12: Relat√≥rios e Projeto Final"
  },
  {
    "objectID": "index.html#m√≥dulo-1-introdu√ß√£o-ao-r-e-organiza√ß√£o-de-dados-semanas-1-2",
    "href": "index.html#m√≥dulo-1-introdu√ß√£o-ao-r-e-organiza√ß√£o-de-dados-semanas-1-2",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Objetivo: Familiarizar o aluno com R, RStudio e a prepara√ß√£o correta dos dados.\n\n\n\nO que √© R e RStudio\nInstala√ß√£o passo a passo\nEstrutura do RStudio (console, script, environment, plots, packages)\n\n\n\n\n\nComandos b√°sicos\nOperadores aritm√©ticos e l√≥gicos\nCriando e manipulando objetos\n\n\n\n\n\ninstall.packages(), library()\nPacotes √∫teis: tidyverse, readxl, agricolae, emmeans, broom, ggplot2\nComo procurar ajuda e documenta√ß√£o\n\n\n\n\n\nComo estruturar dados no Excel (linhas = observa√ß√µes, colunas = vari√°veis)\nImporta√ß√£o de arquivos (.csv, .xlsx, .txt)\nUso de read.csv(), readxl::read_excel(), read.table()\nVerifica√ß√£o e limpeza dos dados (head(), str(), summary())"
  },
  {
    "objectID": "index.html#m√≥dulo-2-manipula√ß√£o-e-explora√ß√£o-de-dados-semanas-3-4",
    "href": "index.html#m√≥dulo-2-manipula√ß√£o-e-explora√ß√£o-de-dados-semanas-3-4",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Objetivo: Aprender a organizar, transformar e explorar dados antes da an√°lise.\n\n\n\ndplyr: select(), filter(), mutate(), summarise(), group_by()\ntidyr: pivot_longer(), pivot_wider()\n\n\n\n\n\nM√©dias, desvios-padr√£o, erro-padr√£o\nTabelas resumo com dplyr\nVisualiza√ß√µes iniciais: histogramas, boxplots, gr√°ficos de barras\n\n\n\n\n\nEstrutura do ggplot2\nGr√°ficos b√°sicos aplicados a dados de experimenta√ß√£o agr√≠cola\nPersonaliza√ß√£o de gr√°ficos\n\n\n\n\n\nDelineamentos b√°sicos: DIC, DBC\nEstrutura dos dados em experimenta√ß√£o agr√≠cola\nPrepara√ß√£o dos dados no Excel para cada delineamento"
  },
  {
    "objectID": "index.html#m√≥dulo-3-an√°lise-de-vari√¢ncia-anova-semanas-5-8",
    "href": "index.html#m√≥dulo-3-an√°lise-de-vari√¢ncia-anova-semanas-5-8",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Objetivo: Ensinar a rodar ANOVA, verificar pressupostos e interpretar resultados, utilizando diferentes pacotes.\n\n\n\nFun√ß√µes base: aov()\nANOVA com ExpDes.pt (dic())\nANOVA com easyanova\n\n\n\n\n\nFun√ß√µes base: aov()\nANOVA com ExpDes.pt (dbc())\nCompara√ß√£o da sa√≠da entre pacotes\n\n\n\n\n\nNormalidade dos res√≠duos: shapiro.test(), rstatix::shapiro_test()\nHomogeneidade: bartlett.test(), car::leveneTest(), rstatix::levene_test()\nInterpreta√ß√£o pr√°tica\n\n\n\n\n\nTukeyHSD() (base R)\nExpDes.pt (j√° integrado √† ANOVA)\nemmeans + cld()\nrstatix::t_test() e rstatix::anova_test()\n\n\n\n\n\nDois fatores com aov()\nDois fatores com ExpDes.pt::fat2.dic() e fat2.dbc()\nInterpreta√ß√£o das intera√ß√µes\n\n\n\n\n\nEstrutura de dados\nExpDes.pt::psub2.dbc() (ou fun√ß√µes equivalentes)\nModelos mistos com lme4::lmer()\n\n\n\n\n\nbroom::tidy() para organizar tabelas\nExporta√ß√£o de resultados com rstatix (get_anova_table())\nApresenta√ß√£o de m√©dias e letras com agricolae, emmeans e ExpDes.pt\n\n\n\n\n\nMesmos dados analisados em aov(), ExpDes.pt, easyanova e rstatix\nDiscuss√£o: qual usar em cada situa√ß√£o"
  },
  {
    "objectID": "index.html#m√≥dulo-4-regress√£o-e-modelos-semanas-9-11",
    "href": "index.html#m√≥dulo-4-regress√£o-e-modelos-semanas-9-11",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Objetivo: Introduzir regress√£o e aplica√ß√µes em experimenta√ß√£o agr√≠cola.\n\n\n\nConceito, ajuste com lm()\nGr√°ficos de regress√£o no ggplot2\n\n\n\n\n\nlm(y ~ poly(x, 2))\nAplica√ß√µes em curvas de dose, tempo, crescimento\n\n\n\n\n\nCrit√©rios AIC e BIC\nCompara√ß√£o de modelos\n\n\n\n\n\nnls()\nAjuste de curvas de resposta √† dose\n\n\n\n\n\nglm(family = binomial)\nExemplos em fitossanidade e sobreviv√™ncia"
  },
  {
    "objectID": "index.html#m√≥dulo-5-encerramento-e-projeto-final-semana-12",
    "href": "index.html#m√≥dulo-5-encerramento-e-projeto-final-semana-12",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Objetivo: Consolidar o aprendizado com aplica√ß√µes pr√°ticas.\n\n\n\nUso do RMarkdown\nExportar para Word e PDF\nOrganiza√ß√£o dos resultados\n\n\n\n\nCada aluno analisa um banco de dados de experimenta√ß√£o agr√≠cola.\nEntrega de relat√≥rio com:\n\nEstrutura dos dados\nANOVA + testes de m√©dias ou regress√£o\nGr√°ficos e tabelas\nInterpreta√ß√£o"
  },
  {
    "objectID": "index.html#cronograma-resumido-atualizado",
    "href": "index.html#cronograma-resumido-atualizado",
    "title": "üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola",
    "section": "",
    "text": "Semanas 1-2: R, RStudio, pacotes, organiza√ß√£o/importa√ß√£o de dados\n\nSemanas 3-4: Manipula√ß√£o de dados, gr√°ficos, delineamentos\n\nSemanas 5-8: ANOVA com base R, ExpDes.pt, easyanova e rstatix\n\nSemanas 9-11: Regress√£o (linear, polinomial, n√£o linear, log√≠stica)\n\nSemana 12: Relat√≥rios e Projeto Final"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Quem sou eu",
    "section": "",
    "text": "Ol√°!\nEu sou Marlenildo Melo, Engenheiro Agr√¥nomo, Doutor em Fitotecnia.\nAcesse meus curr√≠culos ou entre em contato comigo atrav√©s dos links abaixo:\n Linktree\n marlenildo@gmail.com\n (84) 98752-1095"
  },
  {
    "objectID": "codigos.html",
    "href": "codigos.html",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "Instale o R e o RStudio em seu computador.\n\n\nO R √© o programa principal, ou seja, a linguagem de programa√ß√£o e o ambiente de c√°lculo.\n√â nele que todos os comandos s√£o processados e as an√°lises estat√≠sticas s√£o realizadas.\nPor isso, o primeiro passo √© instalar o R no computador.\nO download deve ser feito diretamente no site oficial do CRAN (Comprehensive R Archive Network):\n https://cran.r-project.org/\nAo abrir o link, basta escolher o sistema operacional do seu computador (Windows, macOS ou Linux) e seguir as instru√ß√µes de instala√ß√£o.\nCom isso, voc√™ j√° ter√° o R funcionando, embora a sua interface seja bastante simples e pouco intuitiva para quem est√° come√ßando.\n√â justamente nesse ponto que entra o RStudio.\nO RStudio n√£o √© um programa separado do R, mas sim uma IDE (Integrated Development Environment), ou seja, um ambiente de desenvolvimento que facilita o uso do R.\nEle oferece uma interface gr√°fica amig√°vel, onde voc√™ pode escrever c√≥digos, visualizar gr√°ficos, organizar projetos e instalar pacotes com muito mais facilidade.\nNo entanto, √© fundamental compreender que o RStudio n√£o funciona sozinho.\nEle depende do R j√° instalado na m√°quina, pois √© o R quem executa de fato os c√°lculos.\nPor isso, a ordem correta √©: primeiro instalar o R e, em seguida, instalar o RStudio.\nO download do RStudio pode ser feito no site oficial da Posit (empresa respons√°vel pelo software):\nüëâ https://posit.co/download/rstudio-desktop/\nAo instalar os dois programas, voc√™ ter√° o R como motor de c√°lculo e o RStudio como painel de controle, trabalhando em conjunto.\nEssa combina√ß√£o √© a mais utilizada no mundo acad√™mico e profissional para an√°lises estat√≠sticas e ci√™ncia de dados.\n\nConhe√ßa os principais pain√©is do RStudio:\n\nConsole (execu√ß√£o de comandos)\n\nSource (script)\n\nEnvironment/History (objetos)\n\nPlots/Packages/Help\n\n\nVerificando vers√£o do R\n\n# Verificando vers√£o do R\nversion\n\n               _                                \nplatform       x86_64-w64-mingw32               \narch           x86_64                           \nos             mingw32                          \ncrt            ucrt                             \nsystem         x86_64, mingw32                  \nstatus                                          \nmajor          4                                \nminor          5.1                              \nyear           2025                             \nmonth          06                               \nday            13                               \nsvn rev        88306                            \nlanguage       R                                \nversion.string R version 4.5.1 (2025-06-13 ucrt)\nnickname       Great Square Root                \n\n\nCitando o R\n\n# Cita√ß√£o do R\ncitation()\n\nTo cite R in publications use:\n\n  R Core Team (2025). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nUma entrada BibTeX para usu√°rios(as) de LaTeX √©\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2025},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\n\nOpera√ß√µes simples\n\n# Opera√ß√µes simples\n\n## Soma\n2 + 2\n\n[1] 4\n\n## Subtra√ß√£o\n7 - 2\n\n[1] 5\n\n## Mutiplica√ß√£o\n4 * 3\n\n[1] 12\n\n## Divis√£o\n10 / 3\n\n[1] 3.333333\n\n## Raiz quadrada\nsqrt(25)\n\n[1] 5\n\n\n\n\n\n\nNesta aula, aprendemos a criar e manipular objetos no R. Objetos s√£o vari√°veis que armazenam valores ou resultados de c√°lculos, permitindo que possamos reutiliz√°-los em outras opera√ß√µes.\nNo exemplo apresentado, criamos dois objetos num√©ricos:\n\n# Criando objetos\nx &lt;- 5\ny &lt;- 10\n\nAqui, x recebe o valor 5 e y recebe o valor 10. Em seguida, criamos um terceiro objeto chamado soma, que armazena a soma de x e y:\n\nsoma &lt;- x + y\nsoma\n\n[1] 15\n\n\nAo digitar apenas soma, o R retorna o valor armazenado neste objeto, que neste caso √© 15.\nEste exemplo ilustra a forma b√°sica de criar objetos no R e realizar opera√ß√µes simples com eles, fundamental para qualquer an√°lise de dados ou programa√ß√£o no software.\n\n\n\n\nNo R, os pacotes s√£o conjuntos de fun√ß√µes, dados e recursos que estendem as capacidades b√°sicas do software, permitindo realizar an√°lises mais complexas de forma pr√°tica e eficiente.\nNo exemplo abaixo, veja como instalar alguns pacotes importantes um de cada vez:\n\n# Carregando pacotes\ninstall.packages(\"tidyverse\")   # Para manipula√ß√£o e visualiza√ß√£o de dados\ninstall.packages(\"dplyr\")   # Para manipula√ß√£o e visualiza√ß√£o de dados\ninstall.packages(\"readxl\")      # Para ler arquivos do Excel\ninstall.packages(\"ExpDes.pt\")   # Para planejamento e an√°lise de experimentos agr√≠colas\ninstall.packages(\"easyanova\")   # Para facilitar an√°lises de vari√¢ncia\ninstall.packages(\"rstatix\")     # Para estat√≠sticas descritivas e testes inferenciais\ninstall.packages(\"emmeans\")     # Para estat√≠sticas descritivas e testes inferenciais\n\nOuse preferir pode instalar v√°rios de uma √∫nica vez:\n\n# Carregando pacotes\ninstall.packages(\"tidyverse\", \"readxl\", \"ExpDes.pt\", \"easyanova\", \"rstatix\", \"emmeans\")\n\nNo exemplo abaixo, carregamos alguns pacotes importantes:\n\n# Carregando pacotes\n\n# ---------------------------\n# Pacotes para manipula√ß√£o e leitura de dados\n# ---------------------------\nlibrary(tidyverse)   # Inclui dplyr, ggplot2, readr, tidyr, etc.\nlibrary(dplyr)       # Manipula√ß√£o de dados\nlibrary(readxl)      # Para importar planilhas Excel\n\n# ---------------------------\n# Pacotes para an√°lise de experimentos\n# ---------------------------\nlibrary(ExpDes.pt)   # ANOVA para DIC, DBC, parcelas subdivididas etc.\nlibrary(easyanova)   # ANOVA e testes complementares de forma simplificada\n\n# ---------------------------\n# Pacotes para estat√≠stica e p√≥s-testes\n# ---------------------------\nlibrary(rstatix)     # Testes estat√≠sticos (normalidade, homogeneidade, etc.)\nlibrary(emmeans)     # M√©dias ajustadas e compara√ß√µes m√∫ltiplas\n\n\n\n\n\nUm dos passos mais importantes em qualquer an√°lise √© a organiza√ß√£o adequada dos dados. Dados desorganizados ou com nomes de vari√°veis inconsistentes podem dificultar o trabalho, aumentar a chance de erros e at√© inviabilizar o uso de fun√ß√µes em softwares estat√≠sticos como o R.\nVeja esse esse exmeplo de banco de dados (dados_ruins_dic) no Excel:\n\n\n\n\n\nRepeti√ß√£o\nTratamento\nAltura da planta (cm)\nMat√©ria seca (g)\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nImport√¢ncia de bons t√≠tulos nas vari√°veis\nNo R, os nomes das colunas (ou t√≠tulos das vari√°veis) devem seguir algumas boas pr√°ticas para facilitar a an√°lise:\n\nPadr√£o snake_case: usar letras min√∫sculas e sublinhados para separar palavras, como altura_planta_g.\nEvitar espa√ßos: em vez de Altura da Planta, utilizar Altura_Planta.\n\nUsar unidades no nome da vari√°vel: em vez de Altura da Planta (cm), utilizar Altura_Planta_cm.\n\nUsar letras min√∫sculas (ou padr√£o definido): altura_planta_cm.\n\nEvitar acentos e caracteres especiais: em vez de Mat√©ria seca (g), utilizar materia_seca_g.\n\nSer descritivo, mas n√£o excessivamente longo: peso_frutos em vez de pf_colheita_experimental_2024.\n\nEsses cuidados tornam o banco de dados mais limpo, reprodut√≠vel e compat√≠vel com fun√ß√µes e pacotes do R.\nComo organizar os t√≠tulos\n\nPode fazer manulamente no Excel\n\nAntes de importar o arquivo para o R, pode-se renomear diretamente no Excel.\n\nExemplo: renomear a coluna de Massa seca total (g) para massa_seca_total_g.\n\nManualmente no R usando o pacote dplyr\n\nA fun√ß√£o rename() do pacote dplyr permite renomear manualmente colunas espec√≠ficas.\n\n# Renomear colunas espec√≠ficas\nlibrary(dplyr)\ndados_organizados_dplyr &lt;- dados_ruins_dic |&gt;\n  rename(\n    repeticao = `Repeti√ß√£o`,\n    tratamento = Tratamento,\n    altura_planta_cm = `Altura da planta (cm)`,\n    materia_seca_g = `Mat√©ria seca (g)`\n  )\n\n\n\n\n\n\nrepeticao\ntratamento\naltura_planta_cm\nmateria_seca_g\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nNomes antes:\n\n# Ver como eram\nnames(dados_ruins_dic)\n\n[1] \"Repeti√ß√£o\"             \"Tratamento\"            \"Altura da planta (cm)\"\n[4] \"Mat√©ria seca (g)\"     \n\n\nNomes depois:\n\n# Ver como ficaram\nnames(dados_organizados_dplyr)\n\n[1] \"repeticao\"        \"tratamento\"       \"altura_planta_cm\" \"materia_seca_g\"  \n\n\n\nAutom√°tico usando o pacote janitor\nExistem pacotes que auxiliam na padroniza√ß√£o dos nomes de maneira autom√°tica:\n\nPacote janitor: a fun√ß√£o clean_names() desse pacote converte automaticamente os t√≠tulos para um formato padr√£o (snake_case).\n\n\nVeja o que acontece com esse banco de dados (dados_ruins_dic):\n\n# Corrigir nomes das colunas -&gt; formato \"snake_case\"\ndados_organizados_janitor &lt;- dados_ruins_dic |&gt; \n  janitor::clean_names()\n\n\n\n\n\n\nrepeticao\ntratamento\naltura_da_planta_cm\nmateria_seca_g\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nNomes antes:\n\n# Ver como eram\nnames(dados_ruins_dic)\n\n[1] \"Repeti√ß√£o\"             \"Tratamento\"            \"Altura da planta (cm)\"\n[4] \"Mat√©ria seca (g)\"     \n\n\nNomes depois:\n\n# Ver como ficaram\nnames(dados_organizados_janitor)\n\n[1] \"repeticao\"           \"tratamento\"          \"altura_da_planta_cm\"\n[4] \"materia_seca_g\"     \n\n\n\n\n\n\nImportando dados\nImportar dados para o R √© um passo fundamental para qualquer an√°lise. No R, √© poss√≠vel importar dados de diferentes formatos, o que √© essencial para iniciar qualquer an√°lise. O R permite ler diferentes formatos de arquivos, como CSV e Excel.\n\n# Importando CSV\n# dados_csv &lt;- read.csv(\"meus_dados.csv\", sep = \";\", dec = \",\")\n# L√™ arquivos CSV, permitindo especificar o separador de colunas (sep) e o separador decimal (dec)\n\n# Importando Excel\n# dados_excel &lt;- readxl::read_excel(\"meus_dados.xlsx\")\n# L√™ planilhas do Excel diretamente para o R\n\n# Importando arquivo de texto (TXT)\n# dados_txt &lt;- read.table(\"meus_dados.txt\", header = TRUE, sep = \"\\t\", dec = \".\")\n# L√™ arquivos de texto, onde 'header = TRUE' indica que a primeira linha cont√©m os nomes das colunas,\n# 'sep = \"\\t\"' indica que as colunas s√£o separadas por tabula√ß√£o, e 'dec = \".\"' define o separador decimal\n\n\nread.csv() l√™ arquivos no formato CSV (Comma-Separated Values), permitindo especificar o separador de colunas (sep) e o separador decimal (dec). √â indicado para planilhas exportadas como CSV ou dados gerados por outros programas.\nread_excel() (do pacote readxl) l√™ arquivos do Excel (.xls ou .xlsx) diretamente, mantendo nomes das colunas e tipos de dados corretamente, o que facilita a importa√ß√£o de planilhas complexas sem precisar convert√™-las.\nread.table() l√™ arquivos de texto simples (TXT ou outros delimitados), oferecendo flexibilidade para especificar se h√° cabe√ßalho (header = TRUE), o separador de colunas (sep) e o separador decimal (dec). √â ideal para arquivos de texto com diferentes formatos de separa√ß√£o.\n\nVisualizando os dados\nAp√≥s a importa√ß√£o, podemos visualizar os dados para verificar se foram carregados corretamente: Ap√≥s a importa√ß√£o, √© importante visualizar os dados para conferir se foram carregados corretamente. Para isso, podem ser usadas fun√ß√µes como:\n\nhead() (exibe as primeiras linhas),\nsummary() (mostra resumo estat√≠stico das vari√°veis),\nstr() (mostra a estrutura do objeto) e\nglimpse() (exibe de forma compacta e leg√≠vel a estrutura e os tipos das vari√°veis).\n\n\n# head(dados_csv)    # Mostra as primeiras linhas do conjunto de dados\n# summary(dados_csv) # Mostra um resumo estat√≠stico das vari√°veis\n# str(dados_csv)     # Mostra a estrutura do objeto, incluindo tipos de vari√°veis e dimens√µes\n# glimpse(dados_csv)  # Mostra todas as vari√°veis, seus tipos e algumas observa√ß√µes de cada coluna\n\n\n\n\n\n\n\n\n\nVari√°veis num√©ricas\n\nCont√≠nuas (numeric / dbl): podem assumir qualquer valor dentro de um intervalo, incluindo decimais.\nExemplo: Produtividade (t/ha), √Årea (m¬≤)\nDiscretas (integer / int): assumem apenas valores inteiros.\nExemplo: Parcela (identificador das parcelas)\n\nVari√°veis categ√≥ricas (fatores) (factor / fct)\n\nRepresentam categorias ou grupos que o R reconhece para an√°lises estat√≠sticas.\nExemplo: Tratamento, Variedade\n\nIdeais para an√°lise de vari√¢ncia e compara√ß√µes entre grupos\n\nVari√°veis de texto (character / chr)\n\nCont√™m informa√ß√µes textuais ou descritivas, que n√£o t√™m ordem ou significado num√©rico.\nExemplo: Local (Norte, Sul, Leste)\n\nN√£o s√£o usadas diretamente em c√°lculos estat√≠sticos, mas servem para identificar ou agrupar dados\n\nVari√°veis l√≥gicas (logical / logi)\n\nAssumem apenas dois valores: TRUE ou FALSE\nExemplo: Irrigado\n\n√öteis para condi√ß√µes, filtros e an√°lises condicionais\n\nOutros tipos dispon√≠veis em R\n\nComplexo (complex / sem abrevia√ß√£o comum): n√∫meros complexos, como 1+2i\nRaw (raw / sem abrevia√ß√£o comum): representa dados brutos em bytes\n\nDate (Date / sem abrevia√ß√£o comum): datas no formato \"YYYY-MM-DD\"\n\nPOSIXct / POSIXlt (POSIXct / POSIXlt): datas e horas com tempo\nOrdered factor (ordered / ord): fatores com ordem natural definida\n\n\n\nNeste exemplo, iremos criar vari√°veis de diferentes tipos em R ‚Äî num√©ricas cont√≠nuas, num√©ricas discretas e categ√≥ricas (fatores) ‚Äî e, em seguida, identificar o tipo de cada vari√°vel usando a fun√ß√£o class().\nIsso nos permite compreender como o R armazena cada tipo de dado e como ele ser√° tratado em an√°lises estat√≠sticas.\n\n# Num√©rica cont√≠nua\nnum_cont &lt;- 3.5      # numeric / dbl\nclass(num_cont) # Checando classes\n\n[1] \"numeric\"\n\n# Num√©rica discreta\nnum_disc &lt;- 5L       # integer / int\nclass(num_disc)\n\n[1] \"integer\"\n\n# Fator (categ√≥rica)\ntrat &lt;- factor(c(\"T1\", \"T2\", \"T3\"))  # factor / fct\nclass(trat)\n\n[1] \"factor\"\n\n# Ordered factor\nord_trat &lt;- factor(c(\"Baixo\", \"M√©dio\", \"Alto\"), ordered = TRUE) # ordered / ord\nclass(ord_trat)\n\n[1] \"ordered\" \"factor\" \n\n# Character\nlocal &lt;- c(\"Norte\", \"Sul\")  # character / chr\nclass(local)\n\n[1] \"character\"\n\n# L√≥gica\nirr &lt;- c(TRUE, FALSE)       # logical / logi\nclass(irr)\n\n[1] \"logical\"\n\n# Complexo\ncplx &lt;- 1 + 2i              # complex\nclass(cplx)\n\n[1] \"complex\"\n\n# Raw\nr &lt;- charToRaw(\"A\")         # raw\nclass(r)\n\n[1] \"raw\"\n\n# Datas\nd &lt;- as.Date(\"2025-08-29\")  # Date\nclass(d)\n\n[1] \"Date\"\n\ndt &lt;- as.POSIXct(\"2025-08-29 12:00:00\") # POSIXct\nclass(dt)\n\n[1] \"POSIXct\" \"POSIXt\" \n\n\n\nCriando banco de dados fict√≠cio\nNeste exemplo, iremos criar um banco de dados fict√≠cio de um experimento agr√≠cola com diferentes tipos de vari√°veis: num√©ricas (cont√≠nuas e discretas), categ√≥ricas, l√≥gicas e de texto.\nEm seguida, iremos visualizar o banco de dados e identificar os tipos de vari√°veis, para entender como o R armazena cada tipo e como podemos manipul√°-las em an√°lises estat√≠sticas.\n\n# Exemplo de banco de dados de experimento agr√≠cola\ndados_agro &lt;- data.frame(\n  Parcela = 1:9,                               # Num√©rica discreta (identifica√ß√£o das parcelas)\n  Tratamento = factor(rep(c(\"T1\", \"T2\", \"T3\"), each = 3)), # Fator (categ√≥rica nominal)\n  Variedade = factor(c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\")), # Fator (categ√≥rica nominal)\n  Area = c(10, 10, 10, 12, 12, 12, 11, 11, 11),  # Num√©rica cont√≠nua (m¬≤)\n  Produtividade = c(30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5), # Num√©rica cont√≠nua (t/ha)\n  Irrigado = c(TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE),   # L√≥gica\n  Local = c(\"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\", \"Leste\", \"Leste\") # Texto (character)\n)\n\n\n# Exemplo de banco de dados de experimento agr√≠cola\ndados_agro &lt;- data.frame(\n  Parcela = 1:9,                               # Num√©rica discreta (identifica√ß√£o das parcelas)\n  Tratamento = rep(c(\"T1\", \"T2\", \"T3\"), each = 3), # Fator (categ√≥rica nominal)\n  Variedade = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\"), # Fator (categ√≥rica nominal)\n  Area = c(10, 10, 10, 12, 12, 12, 11, 11, 11),  # Num√©rica cont√≠nua (m¬≤)\n  Produtividade = c(30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5), # Num√©rica cont√≠nua (t/ha)\n  Irrigado = c(TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE),   # L√≥gica\n  Local = c(\"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\", \"Leste\", \"Leste\") # Texto (character)\n)\n\n\nFun√ß√µes para Visualiza√ß√£o e Estrutura de Dados no R\n\nhead(dados_agro)\nMostra as primeiras linhas do conjunto de dados.\n\n√ötil para ter uma vis√£o r√°pida do conte√∫do do banco, verificando se os dados foram importados corretamente.\n\nExemplo de sa√≠da:\n\n\n\nhead(dados_agro) \n\n  Parcela Tratamento Variedade Area Produtividade Irrigado Local\n1       1         T1         A   10          30.5     TRUE Norte\n2       2         T1         A   10          32.0     TRUE Norte\n3       3         T1         A   10          31.0     TRUE Norte\n4       4         T2         B   12          28.0    FALSE   Sul\n5       5         T2         B   12          29.5    FALSE   Sul\n6       6         T2         B   12          30.0    FALSE   Sul\n\n\n\n\nstr(dados_agro)\n\nMostra a estrutura do objeto, permitindo entender rapidamente como os dados est√£o organizados no R.\nCom essa fun√ß√£o, √© poss√≠vel:\n\nVer o n√∫mero de observa√ß√µes (linhas) e o n√∫mero de vari√°veis (colunas) do banco de dados, por exemplo, 9 obs. of 7 variables.\n\nIdentificar o tipo de cada vari√°vel, como int (inteiro), num (num√©rico cont√≠nuo), Factor (categ√≥rica), logi (l√≥gica/boolean) e chr (texto).\n\nConferir alguns valores iniciais de cada coluna, ajudando a verificar se os dados foram importados corretamente e se os tipos est√£o adequados para an√°lise.\n\nEm resumo, str() √© uma fun√ß√£o essencial para inspecionar rapidamente a estrutura e os tipos das vari√°veis, antes de realizar qualquer an√°lise estat√≠stica ou manipula√ß√£o dos dados.\n\nstr(dados_agro)\n\n'data.frame':   9 obs. of  7 variables:\n $ Parcela      : int  1 2 3 4 5 6 7 8 9\n $ Tratamento   : chr  \"T1\" \"T1\" \"T1\" \"T2\" ...\n $ Variedade    : chr  \"A\" \"A\" \"A\" \"B\" ...\n $ Area         : num  10 10 10 12 12 12 11 11 11\n $ Produtividade: num  30.5 32 31 28 29.5 30 33 34.5 32.5\n $ Irrigado     : logi  TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ Local        : chr  \"Norte\" \"Norte\" \"Norte\" \"Sul\" ...\n\n\nObserve que Tratamento e Variedade aparecem como character, ou seja, texto.\nPara an√°lises estat√≠sticas, √© recomendado transformar essas vari√°veis em fatores.\n\n\nsummary(dados_agro)\n\nMostra um resumo estat√≠stico das vari√°veis:\n- Para vari√°veis num√©ricas: m√≠nimo, m√°ximo, m√©dia, quartis\n- Para fatores: contagem de cada n√≠vel\n- Para l√≥gicas: contagem de TRUE e FALSE\n- √ötil para identificar tend√™ncias, valores extremos e distribui√ß√£o dos dados.\n\nsummary(dados_agro)\n\n    Parcela   Tratamento         Variedade              Area    Produtividade  \n Min.   :1   Length:9           Length:9           Min.   :10   Min.   :28.00  \n 1st Qu.:3   Class :character   Class :character   1st Qu.:10   1st Qu.:30.00  \n Median :5   Mode  :character   Mode  :character   Median :11   Median :31.00  \n Mean   :5                                         Mean   :11   Mean   :31.22  \n 3rd Qu.:7                                         3rd Qu.:12   3rd Qu.:32.50  \n Max.   :9                                         Max.   :12   Max.   :34.50  \n  Irrigado          Local          \n Mode :logical   Length:9          \n FALSE:3         Class :character  \n TRUE :6         Mode  :character  \n                                   \n                                   \n                                   \n\n\nVeja novamente que Tratamento e Variedade aparecem como character.\nE n√£o s√£o reconhecidas como fatores.\nE n√£o √© poss√≠vel perceber quais s√£o os n√≠veis de cada vari√°vel categ√≥rica.\n\nConvertendo variaveis categ√≥ricas em fatores\n\nPode-se convert√™-las em fatores usando a fun√ß√£o as.factor():\n\n\ndados_agro$Tratamento &lt;- as.factor(dados_agro$Tratamento)\ndados_agro$Variedade &lt;- as.factor(dados_agro$Variedade)\n\nAgora veja como fica a estrutura dos dados:\n\nstr(dados_agro)\n\n'data.frame':   9 obs. of  7 variables:\n $ Parcela      : int  1 2 3 4 5 6 7 8 9\n $ Tratamento   : Factor w/ 3 levels \"T1\",\"T2\",\"T3\": 1 1 1 2 2 2 3 3 3\n $ Variedade    : Factor w/ 3 levels \"A\",\"B\",\"C\": 1 1 1 2 2 2 3 3 3\n $ Area         : num  10 10 10 12 12 12 11 11 11\n $ Produtividade: num  30.5 32 31 28 29.5 30 33 34.5 32.5\n $ Irrigado     : logi  TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ Local        : chr  \"Norte\" \"Norte\" \"Norte\" \"Sul\" ...\n\n\nAgora sim, Tratamento e variedade aparecem como Factor com 3 n√≠veis cada.\nveja como fica o resumo estat√≠stico dos dados:\n\nsummary(dados_agro)\n\n    Parcela  Tratamento Variedade      Area    Produtividade    Irrigado      \n Min.   :1   T1:3       A:3       Min.   :10   Min.   :28.00   Mode :logical  \n 1st Qu.:3   T2:3       B:3       1st Qu.:10   1st Qu.:30.00   FALSE:3        \n Median :5   T3:3       C:3       Median :11   Median :31.00   TRUE :6        \n Mean   :5                        Mean   :11   Mean   :31.22                  \n 3rd Qu.:7                        3rd Qu.:12   3rd Qu.:32.50                  \n Max.   :9                        Max.   :12   Max.   :34.50                  \n    Local          \n Length:9          \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\nAgora √© poss√≠vel ver a contagem de cada n√≠vel das vari√°veis categ√≥ricas. Ou seja, s√£o 3 n√≠veis em cada vari√°vel (T1, T2, T3 para Tratamento e A, B, C para Variedade).\n\nPode-se convert√™-las em fatores usando a fun√ß√£o factor():\n\nTamb√©m d√° para criar o fator diretamente com a fun√ß√£o factor(), que √© mais flex√≠vel porque permite:\n\nDefinir os n√≠veis (levels)\nDefinir as etiquetas (labels)\n\nOu seja, permite controlar a ordem e o r√≥tulo dos n√≠veis (mais recomendado para ANOVA e modelos, pois evita ordem alfab√©tica indesejada).\n\nPode-se ainda convert√™-las em fatores usando a fun√ß√£o convert_as_factor() do pacote {rstatix}:\n\nA fun√ß√£o convert_as_factor() pode converter uma ou v√°rias colunas ao mesmo tempo.\n\n\nglimpse(dados_agro) (do pacote dplyr)\n\nMostra a estrutura dos dados de forma compacta e leg√≠vel, similar ao str(), mas em formato horizontal:\n\nExibe todas as vari√°veis, seus tipos e algumas observa√ß√µes iniciais\n\nMais f√°cil de ler quando o banco de dados tem muitas colunas\n\nExemplo de sa√≠da (resumida):\n\nglimpse(dados_agro)\n\nRows: 9\nColumns: 7\n$ Parcela       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9\n$ Tratamento    &lt;fct&gt; Controle, Controle, Controle, Adubo, Adubo, Adubo, Bioes‚Ä¶\n$ Variedade     &lt;fct&gt; IPA 11, IPA 11, IPA 11, Campo Lindo, Campo Lindo, Campo ‚Ä¶\n$ Area          &lt;dbl&gt; 10, 10, 10, 12, 12, 12, 11, 11, 11\n$ Produtividade &lt;dbl&gt; 30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5\n$ Irrigado      &lt;lgl&gt; TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE\n$ Local         &lt;chr&gt; \"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\",‚Ä¶\n\n\n\n\n\n\n\n# Exemplo fict√≠cio\ndados &lt;- data.frame(\n  tratamento = rep(c(\"T1\", \"T2\", \"T3\"), each = 4),\n  repeticao = rep(1:4, 3),\n  produtividade = c(30, 32, 28, 31, 35, 36, 34, 37, 25, 27, 26, 28)\n)\n\n# Selecionar colunas e filtrar\ndados |&gt; dplyr::select(tratamento, produtividade) |&gt; filter(produtividade &gt; 30)\n\n  tratamento produtividade\n1         T1            32\n2         T1            31\n3         T2            35\n4         T2            36\n5         T2            34\n6         T2            37\n\n# Resumo estat√≠stico\ndados |&gt;\n  group_by(tratamento) |&gt;\n  summarise(\n    media = mean(produtividade),\n    sd = sd(produtividade)\n  )\n\n# A tibble: 3 √ó 3\n  tratamento media    sd\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 T1          30.2  1.71\n2 T2          35.5  1.29\n3 T3          26.5  1.29\n\n\n\n\n\n\n\n# Histograma\nggplot(dados, aes(x = produtividade)) +\n  geom_histogram(binwidth = 2, fill = \"skyblue\", color = \"black\")\n\n\n\n\n\n\n\n# Boxplot\nggplot(dados, aes(x = tratamento, y = produtividade)) +\n  geom_boxplot(fill = \"orange\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Primeiro transformar vari√°veis em fatores\ndados$tratamento &lt;- factor(dados$tratamento)\ndados$repeticao &lt;- factor(dados$repeticao)\n\n# ANOVA usando aov()\nmodelo &lt;- aov(produtividade ~ tratamento, data = dados)\nsummary(modelo)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ntratamento   2 163.50   81.75   39.24 3.59e-05 ***\nResiduals    9  18.75    2.08                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ANOVA usando rstatix\ndados |&gt; anova_test(produtividade ~ tratamento)\n\nANOVA Table (type II tests)\n\n      Effect DFn DFd     F        p p&lt;.05   ges\n1 tratamento   2   9 39.24 3.59e-05     * 0.897\n\n# ANOVA usando ExpDes.pt\ndic(\n  trat = dados$tratamento,\n  resp = dados$produtividade,\n  quali = TRUE,\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nQuadro da analise de variancia\n------------------------------------------------------------------------\n           GL     SQ     QM    Fc      Pr&gt;Fc\nTratamento  2 163.50 81.750 39.24 3.5934e-05\nResiduo     9  18.75  2.083                 \nTotal      11 182.25                        \n------------------------------------------------------------------------\nCV = 4.69 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos ( Shapiro-Wilk ) \nValor-p:  0.5375769 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\n------------------------------------------------------------------------\nTeste de homogeneidade de variancia \nvalor-p:  0.8663487 \nDe acordo com o teste de bartlett a 5% de significancia, as variancias podem ser consideradas homogeneas.\n------------------------------------------------------------------------\n\nTeste de Tukey\n------------------------------------------------------------------------\nGrupos Tratamentos Medias\na    T2      35.5 \n b   T1      30.25 \n  c      T3      26.5 \n------------------------------------------------------------------------\n\n# ANOVA usando easyanova\neasyanova::ea1(dados[-2], design = 1, plot = 2)\n\n\n\n\n\n\n\n\n$`Analysis of variance`\n           df type I SS mean square F value    p&gt;F\ntreatments  2    163.50     81.7500   39.24 &lt;0.001\nResiduals   9     18.75      2.0833       -      -\n\n$Means\n  treatment  mean     sd    sem min max tukey snk duncan t scott_knott\n1        T2 35.50 1.2910 0.7217  34  37     a   a      a a           a\n2        T1 30.25 1.7078 0.7217  28  32     b   b      b b           b\n3        T3 26.50 1.2910 0.7217  25  28     c   c      c c           c\n\n$`Multiple comparison test`\n     pair contrast p(tukey) p(snk) p(duncan)   p(t)\n1 T2 - T1     5.25   0.0016 0.0006    0.0006 0.0006\n2 T2 - T3     9.00   0.0000 0.0000    0.0000 0.0000\n3 T1 - T3     3.75   0.0128 0.0051    0.0051 0.0051\n\n$`Residual analysis`\n$`Residual analysis`$`residual analysis`\n                             values\np.value Shapiro-Wilk test    0.5376\np.value Bartlett test        0.8663\ncoefficient of variation (%) 4.6900\nfirst value most discrepant  3.0000\nsecond value most discrepant 2.0000\nthird value most discrepant  8.0000\n\n$`Residual analysis`$residuals\n    1     2     3     4     5     6     7     8     9    10    11    12 \n-0.25  1.75 -2.25  0.75 -0.50  0.50 -1.50  1.50 -1.50  0.50 -0.50  1.50 \n\n$`Residual analysis`$`standardized residuals`\n         1          2          3          4          5          6          7 \n-0.1914854  1.3403980 -1.7233688  0.5744563 -0.3829708  0.3829708 -1.1489125 \n         8          9         10         11         12 \n 1.1489125 -1.1489125  0.3829708 -0.3829708  1.1489125 \n\n\nTestes de Pressupostos\nAntes da an√°lise de vari√¢ncia (ANOVA), foi realizada a verifica√ß√£o dos pressupostos de normalidade dos res√≠duos e homogeneidade das vari√¢ncias, que s√£o condi√ß√µes necess√°rias para a validade do teste F.\nNormalidade dos res√≠duos\n\nO teste de Shapiro-Wilk foi aplicado sobre os res√≠duos do modelo, verificando se a distribui√ß√£o se aproxima da normal.\nAl√©m disso, a normalidade foi testada dentro de cada grupo experimental utilizando a fun√ß√£o shapiro_test() do pacote rstatix, o que permite avaliar poss√≠veis desvios em tratamentos espec√≠ficos.\nQuando o valor de p &gt; 0,05, n√£o se rejeita a hip√≥tese nula de normalidade, indicando que os res√≠duos podem ser considerados normalmente distribu√≠dos.\n\n\n# Normalidade\nshapiro.test(residuals(modelo))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(modelo)\nW = 0.94298, p-value = 0.5376\n\n# Usando pacote rstatix e fazendo normalidade por grupo\ndados |&gt; group_by(tratamento) |&gt; rstatix::shapiro_test(produtividade)\n\n# A tibble: 3 √ó 4\n  tratamento variable      statistic     p\n  &lt;fct&gt;      &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt;\n1 T1         produtividade     0.971 0.850\n2 T2         produtividade     0.993 0.972\n3 T3         produtividade     0.993 0.972\n\n\nHomogeneidade das vari√¢ncias\n\nPara verificar se os tratamentos apresentam vari√¢ncias homog√™neas, foram aplicados tr√™s testes:\n\nTeste de Bartlett: sens√≠vel a desvios de normalidade, mas adequado quando os dados s√£o normais.\nTeste de Levene: mais robusto quando a normalidade n√£o √© estritamente atendida.\n\n\n\n# Homogeneidade\n## Teste de Bartlett\nbartlett.test(produtividade ~ tratamento, data = dados)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  produtividade by tratamento\nBartlett's K-squared = 0.28694, df = 2, p-value = 0.8663\n\n## Teste de Levene\nrstatix::levene_test(produtividade ~ tratamento, data = dados)\n\n# A tibble: 1 √ó 4\n    df1   df2 statistic     p\n  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1     2     9     0.158 0.856\n\n\n\nEm todos os testes, valores de p &gt; 0,05 indicam que n√£o h√° evid√™ncias para rejeitar a hip√≥tese de homogeneidade das vari√¢ncias, atendendo ao pressuposto da ANOVA.\n\nDessa forma, a an√°lise de vari√¢ncia pode ser conduzida com confian√ßa, uma vez que os pressupostos de normalidade e homogeneidade foram verificados.\nCompara√ß√µes de M√©dias\n\n# Tukey no R base\nTukeyHSD(modelo)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = produtividade ~ tratamento, data = dados)\n\n$tratamento\n       diff        lwr        upr     p adj\nT2-T1  5.25   2.400421  8.0995788 0.0015767\nT3-T1 -3.75  -6.599579 -0.9004212 0.0127984\nT3-T2 -9.00 -11.849579 -6.1504212 0.0000269\n\n# Tukey no rstatix\ndados |&gt; tukey_hsd(produtividade ~ tratamento)\n\n# A tibble: 3 √ó 9\n  term       group1 group2 null.value estimate conf.low conf.high     p.adj\n* &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 tratamento T1     T2              0     5.25     2.40     8.10  0.00158  \n2 tratamento T1     T3              0    -3.75    -6.60    -0.900 0.0128   \n3 tratamento T2     T3              0    -9      -11.8     -6.15  0.0000269\n# ‚Ñπ 1 more variable: p.adj.signif &lt;chr&gt;\n\n# M√©dias ajustadas\n# Emmeans\nemm &lt;- emmeans(modelo, ~ tratamento)\ngrupos &lt;- multcomp::cld(emm, Letters = letters, adjust = \"tukey\")\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nprint(grupos)\n\n tratamento emmean    SE df lower.CL upper.CL .group\n T3           26.5 0.722  9     24.4     28.6  a    \n T1           30.2 0.722  9     28.1     32.4   b   \n T2           35.5 0.722  9     33.4     37.6    c  \n\nConfidence level used: 0.95 \nConf-level adjustment: sidak method for 3 estimates \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n\n\n\nAnova\nNo DBC (delineamento em blocos casualizados) a diferen√ßa principal √© que voc√™ precisa considerar o efeito de blocos no modelo. Seguindo o mesmo estilo da sua aula de DIC, aqui est√° a vers√£o para DBC:\n\n# ANOVA usando aov()\n# Aqui usamos Error(bloco) ou bloco como efeito\nmodelo &lt;- aov(produtividade ~ tratamento + repeticao, data = dados)\nsummary(modelo)\n\n            Df Sum Sq Mean Sq F value  Pr(&gt;F)    \ntratamento   2 163.50   81.75 127.957 1.2e-05 ***\nrepeticao    3  14.92    4.97   7.783  0.0172 *  \nResiduals    6   3.83    0.64                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ANOVA usando rstatix\ndados |&gt; anova_test(produtividade ~ tratamento + repeticao)\n\nANOVA Table (type II tests)\n\n      Effect DFn DFd       F       p p&lt;.05   ges\n1 tratamento   2   6 127.957 1.2e-05     * 0.977\n2  repeticao   3   6   7.783 1.7e-02     * 0.796\n\n# ANOVA usando ExpDes.pt\ndbc(\n  trat = dados$tratamento,\n  bloco = dados$repeticao,\n  resp = dados$produtividade,\n  quali = TRUE,\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nQuadro da analise de variancia\n------------------------------------------------------------------------\n           GL      SQ     QM      Fc    Pr&gt;Fc\nTratamento  2 163.500 81.750 127.957 0.000012\nBloco       3  14.917  4.972   7.783 0.017195\nResiduo     6   3.833  0.639                 \nTotal      11 182.250                        \n------------------------------------------------------------------------\nCV = 2.6 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos \nvalor-p:  0.4793843 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\n------------------------------------------------------------------------\nTeste de homogeneidade de variancia \nvalor-p:  0.1530654 \nDe acordo com o teste de oneillmathews a 5% de significancia, as variancias podem ser consideradas homogeneas.\n------------------------------------------------------------------------\n\nTeste de Tukey\n------------------------------------------------------------------------\nGrupos Tratamentos Medias\na    T2      35.5 \n b   T1      30.25 \n  c      T3      26.5 \n------------------------------------------------------------------------\n\n# ANOVA usando easyanova\n# design = 2 corresponde a DBC\neasyanova::ea1(dados, design = 2, plot = 2)\n\n\n\n\n\n\n\n\n$`Analysis of variance`\n           df type III SS mean square  F value    p&gt;F\ntreatments  2    163.5000     81.7500 127.9565 &lt;0.001\nblocks      3     14.9167      4.9722   7.7826 0.0172\nresiduals   6      3.8333      0.6389        -      -\n\n$`Adjusted means`\n  treatment adjusted.mean     sd    sem min max tukey snk duncan t scott_knott\n1        T2         35.50 1.2910 0.3997  34  37     a   a      a a           a\n2        T1         30.25 1.7078 0.3997  28  32     b   b      b b           b\n3        T3         26.50 1.2910 0.3997  25  28     c   c      c c           c\n\n$`Multiple comparison test`\n     pair contrast p(tukey) p(snk) p(duncan)  p(t)\n1 T2 - T1     5.25   0.0002  1e-04     1e-04 1e-04\n2 T2 - T3     9.00   0.0000  0e+00     0e+00 0e+00\n3 T1 - T3     3.75   0.0014  6e-04     6e-04 6e-04\n\n$`Residual analysis`\n$`Residual analysis`$`residual analysis`\n                              values\np.value Shapiro-Wilk test     0.4794\np.value Bartlett test         0.8663\ncoefficient of variation (%)  2.6000\nfirst value most discrepant  11.0000\nsecond value most discrepant  3.0000\nthird value most discrepant   2.0000\n\n$`Residual analysis`$residuals\n          1           2           3           4           5           6 \n 0.50000000  0.83333333 -0.83333333 -0.50000000  0.25000000 -0.41666667 \n          7           8           9          10          11          12 \n-0.08333333  0.25000000 -0.75000000 -0.41666667  0.91666667  0.25000000 \n\n$`Residual analysis`$`standardized residuals`\n         1          2          3          4          5          6          7 \n 0.8469896  1.4116493 -1.4116493 -0.8469896  0.4234948 -0.7058246 -0.1411649 \n         8          9         10         11         12 \n 0.4234948 -1.2704843 -0.7058246  1.5528142  0.4234948 \n\n\nObserva√ß√µes importantes:\n\nNo aov(), o termo + bloco garante que a varia√ß√£o entre blocos seja considerada.\nNo ExpDes.pt, usamos dbc() no lugar de dic().\nNo easyanova, o argumento design = 2 √© usado para DBC.\n\nTestes de Pressupostos\n\n# Normalidade\nshapiro.test(residuals(modelo))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(modelo)\nW = 0.93854, p-value = 0.4794\n\n# Usando pacote rstatix e fazendo normalidade por grupo\ndados |&gt; group_by(tratamento) |&gt; rstatix::shapiro_test(produtividade)\n\n# A tibble: 3 √ó 4\n  tratamento variable      statistic     p\n  &lt;fct&gt;      &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt;\n1 T1         produtividade     0.971 0.850\n2 T2         produtividade     0.993 0.972\n3 T3         produtividade     0.993 0.972\n\n# Homogeneidade\n## Teste de Bartlett\nbartlett.test(produtividade ~ tratamento, data = dados)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  produtividade by tratamento\nBartlett's K-squared = 0.28694, df = 2, p-value = 0.8663\n\n## Teste de Levene\nrstatix::levene_test(produtividade ~ tratamento, data = dados)\n\n# A tibble: 1 √ó 4\n    df1   df2 statistic     p\n  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1     2     9     0.158 0.856\n\n## Teste de ONeill e Mathews\noneilldbc(trat = dados$tratamento, resp = dados$produtividade, bloco = dados$repeticao)\n\n[1] 0.1530654\n\n\nEm DBC tamb√©m foi realizado Teste de O‚ÄôNeill e Mathews, espec√≠fico para experimentos em blocos casualizados (DBC), sendo recomendado como alternativa robusta para esse delineamento.\n\nEm todos os testes, valores de p &gt; 0,05 indicam que n√£o h√° evid√™ncias para rejeitar a hip√≥tese de homogeneidade das vari√¢ncias, atendendo ao pressuposto da ANOVA.\n\nCompara√ß√µes de M√©dias\n\n# Tukey no R base\nTukeyHSD(modelo)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = produtividade ~ tratamento + repeticao, data = dados)\n\n$tratamento\n       diff        lwr       upr     p adj\nT2-T1  5.25   3.515829  6.984171 0.0002167\nT3-T1 -3.75  -5.484171 -2.015829 0.0013765\nT3-T2 -9.00 -10.734171 -7.265829 0.0000092\n\n$repeticao\n          diff        lwr         upr     p adj\n2-1  1.6666667 -0.5925501  3.92588339 0.1472526\n3-1 -0.6666667 -2.9258834  1.59255006 0.7441939\n4-1  2.0000000 -0.2592167  4.25921672 0.0796674\n3-2 -2.3333333 -4.5925501 -0.07411661 0.0438895\n4-2  0.3333333 -1.9258834  2.59255006 0.9535148\n4-3  2.6666667  0.4074499  4.92588339 0.0248704\n\n# Tukey no rstatix\ndados |&gt; tukey_hsd(produtividade ~ tratamento)\n\n# A tibble: 3 √ó 9\n  term       group1 group2 null.value estimate conf.low conf.high     p.adj\n* &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 tratamento T1     T2              0     5.25     2.40     8.10  0.00158  \n2 tratamento T1     T3              0    -3.75    -6.60    -0.900 0.0128   \n3 tratamento T2     T3              0    -9      -11.8     -6.15  0.0000269\n# ‚Ñπ 1 more variable: p.adj.signif &lt;chr&gt;\n\n# M√©dias ajustadas\n# Emmeans\nemm &lt;- emmeans(modelo, ~ tratamento)\ngrupos &lt;- multcomp::cld(emm, Letters = letters, adjust = \"tukey\")\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nprint(grupos)\n\n tratamento emmean  SE df lower.CL upper.CL .group\n T3           26.5 0.4  6     25.2     27.8  a    \n T1           30.2 0.4  6     28.9     31.6   b   \n T2           35.5 0.4  6     34.2     36.8    c  \n\nResults are averaged over the levels of: repeticao \nConfidence level used: 0.95 \nConf-level adjustment: sidak method for 3 estimates \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n\n\n\n\n# Exemplo com dois fatores\ndados2 &lt;- expand.grid(\n  adubacao = c(\"A1\", \"A2\"),\n  cultivar = c(\"C1\", \"C2\", \"C3\"),\n  rep = 1:4\n)\nset.seed(123)\ndados2$produtividade &lt;- rnorm(24, mean = 30, sd = 3)\n\n# ANOVA\nmodelo2 &lt;- aov(produtividade ~ adubacao * cultivar, data = dados2)\nsummary(modelo2)\n\n                  Df Sum Sq Mean Sq F value Pr(&gt;F)\nadubacao           1   2.09   2.089   0.217  0.647\ncultivar           2   1.07   0.536   0.056  0.946\nadubacao:cultivar  2  13.72   6.861   0.712  0.504\nResiduals         18 173.43   9.635               \n\n# ExpDes.pt\nfat2.dic(\n  fator1 = dados2$adubacao,\n  fator2 = dados2$cultivar,\n  resp = dados2$produtividade,\n  quali = c(TRUE, TRUE),\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nLegenda:\nFATOR 1:  F1 \nFATOR 2:  F2 \n------------------------------------------------------------------------\n\n\nQuadro da analise de variancia\n------------------------------------------------------------------------\n        GL      SQ QM      Fc   Pr&gt;Fc\nF1       1   2.089  3 0.21680 0.64708\nF2       2   1.073  2 0.05566 0.94602\nF1*F2    2  13.723  4 0.71212 0.50391\nResiduo 18 173.435  5                \nTotal   23 190.319  1                \n------------------------------------------------------------------------\nCV = 10.36 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos (Shapiro-Wilk)\nvalor-p:  0.6606527 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\nInteracao nao significativa: analisando os efeitos simples\n------------------------------------------------------------------------\nF1\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     A1 30.26899\n2     A2 29.67895\n------------------------------------------------------------------------\nF2\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     C1 29.67946\n2     C2 30.16574\n3     C3 30.07672\n------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\ndose &lt;- c(0, 50, 100, 150, 200)\nprod &lt;- c(20, 28, 35, 40, 38)\ndados_reg &lt;- data.frame(dose, prod)\n\nmodelo_reg &lt;- lm(prod ~ dose, data = dados_reg)\na &lt;- summary(modelo_reg)\n\n# Coeficientes\ncoeficientes &lt;- coef(modelo_reg)\nintercepto &lt;- round(coeficientes[1], 2) # sem sinal extra\nslope &lt;- formatC(coeficientes[2], format = \"f\", digits = 2, flag = \"+\") # sempre com sinal\n\n# Estat√≠sticas do modelo\nr2 &lt;- round(a$r.squared, 4)\nf_value &lt;- a$fstatistic[1]\ndf1 &lt;- a$fstatistic[2]\ndf2 &lt;- a$fstatistic[3]\np_value_anova &lt;- pf(f_value, df1, df2, lower.tail = FALSE)\n\n\n\n\n# Equa√ß√£o no formato correto\nequacao &lt;- paste0(\"y = \", intercepto, slope, \"x\")\n\nlegenda &lt;- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", f_value,\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n\n\ndados_reg |&gt;\n  ggplot(aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  annotate(\"text\",\n           x = 100, y = 10,\n           label = legenda,\n           hjust = 0, size = 5) +\n  labs(x = \"Frequ√™ncia de irriga√ß√£o\", y = \"CRA (%)\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Ajustar modelo de regress√£o quadr√°tica\nmodelo_quad &lt;- lm(prod ~ dose + I(dose^2), data = dados_reg)\na &lt;- summary(modelo_quad)\na\n\n\nCall:\nlm(formula = prod ~ dose + I(dose^2), data = dados_reg)\n\nResiduals:\n      1       2       3       4       5 \n 0.5429 -0.9714 -0.3429  1.4286 -0.6571 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept) 19.4571429  1.3021176  14.943  0.00445 **\ndose         0.2217143  0.0308492   7.187  0.01882 * \nI(dose^2)   -0.0006286  0.0001479  -4.250  0.05116 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.384 on 2 degrees of freedom\nMultiple R-squared:  0.9858,    Adjusted R-squared:  0.9715 \nF-statistic: 69.21 on 2 and 2 DF,  p-value: 0.01424\n\n# Coeficientes da regress√£o quadr√°tica (com mais casas decimais)\ncoef_quad &lt;- coef(modelo_quad)\nintercepto &lt;- formatC(coef_quad[1], format = \"f\", digits = 4)\nlinear     &lt;- formatC(coef_quad[2], format = \"f\", digits = 4, flag = \"+\")\nquadratico &lt;- formatC(coef_quad[3], format = \"f\", digits = 4, flag = \"+\") \n# usei 6 casas para o termo quadr√°tico porque geralmente √© bem pequeno\n\n# Estat√≠sticas do modelo\nr2 &lt;- round(a$r.squared, 4)\nf_value &lt;- a$fstatistic[1]\ndf1 &lt;- a$fstatistic[2]\ndf2 &lt;- a$fstatistic[3]\np_value_anova &lt;- pf(f_value, df1, df2, lower.tail = FALSE)\n\n# Equa√ß√£o para legenda\nequacao &lt;- paste0(\"y = \", intercepto, \" \", linear, \"x \", quadratico, \"x¬≤\")\nlegenda &lt;- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", round(f_value, 2),\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n# Gr√°fico\nlibrary(ggplot2)\n\nregressao_quad &lt;- ggplot(dados_reg, aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  stat_smooth(\n    method = \"lm\",\n    formula = y ~ x + I(x^2),\n    se = FALSE,\n    color = \"black\"\n  ) +\n  annotate(\"text\", x = 50, y = 10, label = legenda, hjust = 0, size = 5) +\n  labs(x = \"Dose\", y = \"Produ√ß√£o\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n\n# Exibir gr√°fico\nregressao_quad\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEste pr√≥prio arquivo √© um exemplo.\n\nPode ser exportado em HTML, Word ou PDF.\n\n\n\n\n\n\nAnalise um conjunto de dados agr√≠colas (real ou fornecido):\n- Estruture os dados no Excel/CSV.\n- Importe para o R.\n- Realize ANOVA (com aov(), ExpDes.pt, easyanova e rstatix).\n- Teste pressupostos.\n- Se necess√°rio, ajuste modelos de regress√£o.\n- Gere gr√°ficos com ggplot2.\n- Organize os resultados em relat√≥rio RMarkdown."
  },
  {
    "objectID": "codigos.html#m√≥dulo-1-introdu√ß√£o-ao-r-e-organiza√ß√£o-de-dados",
    "href": "codigos.html#m√≥dulo-1-introdu√ß√£o-ao-r-e-organiza√ß√£o-de-dados",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "Instale o R e o RStudio em seu computador.\n\n\nO R √© o programa principal, ou seja, a linguagem de programa√ß√£o e o ambiente de c√°lculo.\n√â nele que todos os comandos s√£o processados e as an√°lises estat√≠sticas s√£o realizadas.\nPor isso, o primeiro passo √© instalar o R no computador.\nO download deve ser feito diretamente no site oficial do CRAN (Comprehensive R Archive Network):\n https://cran.r-project.org/\nAo abrir o link, basta escolher o sistema operacional do seu computador (Windows, macOS ou Linux) e seguir as instru√ß√µes de instala√ß√£o.\nCom isso, voc√™ j√° ter√° o R funcionando, embora a sua interface seja bastante simples e pouco intuitiva para quem est√° come√ßando.\n√â justamente nesse ponto que entra o RStudio.\nO RStudio n√£o √© um programa separado do R, mas sim uma IDE (Integrated Development Environment), ou seja, um ambiente de desenvolvimento que facilita o uso do R.\nEle oferece uma interface gr√°fica amig√°vel, onde voc√™ pode escrever c√≥digos, visualizar gr√°ficos, organizar projetos e instalar pacotes com muito mais facilidade.\nNo entanto, √© fundamental compreender que o RStudio n√£o funciona sozinho.\nEle depende do R j√° instalado na m√°quina, pois √© o R quem executa de fato os c√°lculos.\nPor isso, a ordem correta √©: primeiro instalar o R e, em seguida, instalar o RStudio.\nO download do RStudio pode ser feito no site oficial da Posit (empresa respons√°vel pelo software):\nüëâ https://posit.co/download/rstudio-desktop/\nAo instalar os dois programas, voc√™ ter√° o R como motor de c√°lculo e o RStudio como painel de controle, trabalhando em conjunto.\nEssa combina√ß√£o √© a mais utilizada no mundo acad√™mico e profissional para an√°lises estat√≠sticas e ci√™ncia de dados.\n\nConhe√ßa os principais pain√©is do RStudio:\n\nConsole (execu√ß√£o de comandos)\n\nSource (script)\n\nEnvironment/History (objetos)\n\nPlots/Packages/Help\n\n\nVerificando vers√£o do R\n\n# Verificando vers√£o do R\nversion\n\n               _                                \nplatform       x86_64-w64-mingw32               \narch           x86_64                           \nos             mingw32                          \ncrt            ucrt                             \nsystem         x86_64, mingw32                  \nstatus                                          \nmajor          4                                \nminor          5.1                              \nyear           2025                             \nmonth          06                               \nday            13                               \nsvn rev        88306                            \nlanguage       R                                \nversion.string R version 4.5.1 (2025-06-13 ucrt)\nnickname       Great Square Root                \n\n\nCitando o R\n\n# Cita√ß√£o do R\ncitation()\n\nTo cite R in publications use:\n\n  R Core Team (2025). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nUma entrada BibTeX para usu√°rios(as) de LaTeX √©\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2025},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\n\nOpera√ß√µes simples\n\n# Opera√ß√µes simples\n\n## Soma\n2 + 2\n\n[1] 4\n\n## Subtra√ß√£o\n7 - 2\n\n[1] 5\n\n## Mutiplica√ß√£o\n4 * 3\n\n[1] 12\n\n## Divis√£o\n10 / 3\n\n[1] 3.333333\n\n## Raiz quadrada\nsqrt(25)\n\n[1] 5\n\n\n\n\n\n\nNesta aula, aprendemos a criar e manipular objetos no R. Objetos s√£o vari√°veis que armazenam valores ou resultados de c√°lculos, permitindo que possamos reutiliz√°-los em outras opera√ß√µes.\nNo exemplo apresentado, criamos dois objetos num√©ricos:\n\n# Criando objetos\nx &lt;- 5\ny &lt;- 10\n\nAqui, x recebe o valor 5 e y recebe o valor 10. Em seguida, criamos um terceiro objeto chamado soma, que armazena a soma de x e y:\n\nsoma &lt;- x + y\nsoma\n\n[1] 15\n\n\nAo digitar apenas soma, o R retorna o valor armazenado neste objeto, que neste caso √© 15.\nEste exemplo ilustra a forma b√°sica de criar objetos no R e realizar opera√ß√µes simples com eles, fundamental para qualquer an√°lise de dados ou programa√ß√£o no software.\n\n\n\n\nNo R, os pacotes s√£o conjuntos de fun√ß√µes, dados e recursos que estendem as capacidades b√°sicas do software, permitindo realizar an√°lises mais complexas de forma pr√°tica e eficiente.\nNo exemplo abaixo, veja como instalar alguns pacotes importantes um de cada vez:\n\n# Carregando pacotes\ninstall.packages(\"tidyverse\")   # Para manipula√ß√£o e visualiza√ß√£o de dados\ninstall.packages(\"dplyr\")   # Para manipula√ß√£o e visualiza√ß√£o de dados\ninstall.packages(\"readxl\")      # Para ler arquivos do Excel\ninstall.packages(\"ExpDes.pt\")   # Para planejamento e an√°lise de experimentos agr√≠colas\ninstall.packages(\"easyanova\")   # Para facilitar an√°lises de vari√¢ncia\ninstall.packages(\"rstatix\")     # Para estat√≠sticas descritivas e testes inferenciais\ninstall.packages(\"emmeans\")     # Para estat√≠sticas descritivas e testes inferenciais\n\nOuse preferir pode instalar v√°rios de uma √∫nica vez:\n\n# Carregando pacotes\ninstall.packages(\"tidyverse\", \"readxl\", \"ExpDes.pt\", \"easyanova\", \"rstatix\", \"emmeans\")\n\nNo exemplo abaixo, carregamos alguns pacotes importantes:\n\n# Carregando pacotes\n\n# ---------------------------\n# Pacotes para manipula√ß√£o e leitura de dados\n# ---------------------------\nlibrary(tidyverse)   # Inclui dplyr, ggplot2, readr, tidyr, etc.\nlibrary(dplyr)       # Manipula√ß√£o de dados\nlibrary(readxl)      # Para importar planilhas Excel\n\n# ---------------------------\n# Pacotes para an√°lise de experimentos\n# ---------------------------\nlibrary(ExpDes.pt)   # ANOVA para DIC, DBC, parcelas subdivididas etc.\nlibrary(easyanova)   # ANOVA e testes complementares de forma simplificada\n\n# ---------------------------\n# Pacotes para estat√≠stica e p√≥s-testes\n# ---------------------------\nlibrary(rstatix)     # Testes estat√≠sticos (normalidade, homogeneidade, etc.)\nlibrary(emmeans)     # M√©dias ajustadas e compara√ß√µes m√∫ltiplas\n\n\n\n\n\nUm dos passos mais importantes em qualquer an√°lise √© a organiza√ß√£o adequada dos dados. Dados desorganizados ou com nomes de vari√°veis inconsistentes podem dificultar o trabalho, aumentar a chance de erros e at√© inviabilizar o uso de fun√ß√µes em softwares estat√≠sticos como o R.\nVeja esse esse exmeplo de banco de dados (dados_ruins_dic) no Excel:\n\n\n\n\n\nRepeti√ß√£o\nTratamento\nAltura da planta (cm)\nMat√©ria seca (g)\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nImport√¢ncia de bons t√≠tulos nas vari√°veis\nNo R, os nomes das colunas (ou t√≠tulos das vari√°veis) devem seguir algumas boas pr√°ticas para facilitar a an√°lise:\n\nPadr√£o snake_case: usar letras min√∫sculas e sublinhados para separar palavras, como altura_planta_g.\nEvitar espa√ßos: em vez de Altura da Planta, utilizar Altura_Planta.\n\nUsar unidades no nome da vari√°vel: em vez de Altura da Planta (cm), utilizar Altura_Planta_cm.\n\nUsar letras min√∫sculas (ou padr√£o definido): altura_planta_cm.\n\nEvitar acentos e caracteres especiais: em vez de Mat√©ria seca (g), utilizar materia_seca_g.\n\nSer descritivo, mas n√£o excessivamente longo: peso_frutos em vez de pf_colheita_experimental_2024.\n\nEsses cuidados tornam o banco de dados mais limpo, reprodut√≠vel e compat√≠vel com fun√ß√µes e pacotes do R.\nComo organizar os t√≠tulos\n\nPode fazer manulamente no Excel\n\nAntes de importar o arquivo para o R, pode-se renomear diretamente no Excel.\n\nExemplo: renomear a coluna de Massa seca total (g) para massa_seca_total_g.\n\nManualmente no R usando o pacote dplyr\n\nA fun√ß√£o rename() do pacote dplyr permite renomear manualmente colunas espec√≠ficas.\n\n# Renomear colunas espec√≠ficas\nlibrary(dplyr)\ndados_organizados_dplyr &lt;- dados_ruins_dic |&gt;\n  rename(\n    repeticao = `Repeti√ß√£o`,\n    tratamento = Tratamento,\n    altura_planta_cm = `Altura da planta (cm)`,\n    materia_seca_g = `Mat√©ria seca (g)`\n  )\n\n\n\n\n\n\nrepeticao\ntratamento\naltura_planta_cm\nmateria_seca_g\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nNomes antes:\n\n# Ver como eram\nnames(dados_ruins_dic)\n\n[1] \"Repeti√ß√£o\"             \"Tratamento\"            \"Altura da planta (cm)\"\n[4] \"Mat√©ria seca (g)\"     \n\n\nNomes depois:\n\n# Ver como ficaram\nnames(dados_organizados_dplyr)\n\n[1] \"repeticao\"        \"tratamento\"       \"altura_planta_cm\" \"materia_seca_g\"  \n\n\n\nAutom√°tico usando o pacote janitor\nExistem pacotes que auxiliam na padroniza√ß√£o dos nomes de maneira autom√°tica:\n\nPacote janitor: a fun√ß√£o clean_names() desse pacote converte automaticamente os t√≠tulos para um formato padr√£o (snake_case).\n\n\nVeja o que acontece com esse banco de dados (dados_ruins_dic):\n\n# Corrigir nomes das colunas -&gt; formato \"snake_case\"\ndados_organizados_janitor &lt;- dados_ruins_dic |&gt; \n  janitor::clean_names()\n\n\n\n\n\n\nrepeticao\ntratamento\naltura_da_planta_cm\nmateria_seca_g\n\n\n\n\nT1 - Testemunha\n1\n160\n280\n\n\nT1 - Testemunha\n2\n165\n300\n\n\nT1 - Testemunha\n3\n158\n290\n\n\nT1 - Testemunha\n4\n162\n295\n\n\nT1 - Testemunha\n5\n161\n285\n\n\nT2 - 50kg N\n1\n180\n360\n\n\nT2 - 50kg N\n2\n185\n370\n\n\nT2 - 50kg N\n3\n178\n365\n\n\nT2 - 50kg N\n4\n182\n368\n\n\nT2 - 50kg N\n5\n184\n362\n\n\nT3 - 100kg N\n1\n200\n450\n\n\nT3 - 100kg N\n2\n205\n460\n\n\nT3 - 100kg N\n3\n198\n455\n\n\nT3 - 100kg N\n4\n202\n465\n\n\nT3 - 100kg N\n5\n201\n458\n\n\nT4 - 150kg N\n1\n220\n550\n\n\nT4 - 150kg N\n2\n225\n560\n\n\nT4 - 150kg N\n3\n218\n545\n\n\nT4 - 150kg N\n4\n222\n555\n\n\nT4 - 150kg N\n5\n221\n548\n\n\n\n\n\n\n\nNomes antes:\n\n# Ver como eram\nnames(dados_ruins_dic)\n\n[1] \"Repeti√ß√£o\"             \"Tratamento\"            \"Altura da planta (cm)\"\n[4] \"Mat√©ria seca (g)\"     \n\n\nNomes depois:\n\n# Ver como ficaram\nnames(dados_organizados_janitor)\n\n[1] \"repeticao\"           \"tratamento\"          \"altura_da_planta_cm\"\n[4] \"materia_seca_g\"     \n\n\n\n\n\n\nImportando dados\nImportar dados para o R √© um passo fundamental para qualquer an√°lise. No R, √© poss√≠vel importar dados de diferentes formatos, o que √© essencial para iniciar qualquer an√°lise. O R permite ler diferentes formatos de arquivos, como CSV e Excel.\n\n# Importando CSV\n# dados_csv &lt;- read.csv(\"meus_dados.csv\", sep = \";\", dec = \",\")\n# L√™ arquivos CSV, permitindo especificar o separador de colunas (sep) e o separador decimal (dec)\n\n# Importando Excel\n# dados_excel &lt;- readxl::read_excel(\"meus_dados.xlsx\")\n# L√™ planilhas do Excel diretamente para o R\n\n# Importando arquivo de texto (TXT)\n# dados_txt &lt;- read.table(\"meus_dados.txt\", header = TRUE, sep = \"\\t\", dec = \".\")\n# L√™ arquivos de texto, onde 'header = TRUE' indica que a primeira linha cont√©m os nomes das colunas,\n# 'sep = \"\\t\"' indica que as colunas s√£o separadas por tabula√ß√£o, e 'dec = \".\"' define o separador decimal\n\n\nread.csv() l√™ arquivos no formato CSV (Comma-Separated Values), permitindo especificar o separador de colunas (sep) e o separador decimal (dec). √â indicado para planilhas exportadas como CSV ou dados gerados por outros programas.\nread_excel() (do pacote readxl) l√™ arquivos do Excel (.xls ou .xlsx) diretamente, mantendo nomes das colunas e tipos de dados corretamente, o que facilita a importa√ß√£o de planilhas complexas sem precisar convert√™-las.\nread.table() l√™ arquivos de texto simples (TXT ou outros delimitados), oferecendo flexibilidade para especificar se h√° cabe√ßalho (header = TRUE), o separador de colunas (sep) e o separador decimal (dec). √â ideal para arquivos de texto com diferentes formatos de separa√ß√£o.\n\nVisualizando os dados\nAp√≥s a importa√ß√£o, podemos visualizar os dados para verificar se foram carregados corretamente: Ap√≥s a importa√ß√£o, √© importante visualizar os dados para conferir se foram carregados corretamente. Para isso, podem ser usadas fun√ß√µes como:\n\nhead() (exibe as primeiras linhas),\nsummary() (mostra resumo estat√≠stico das vari√°veis),\nstr() (mostra a estrutura do objeto) e\nglimpse() (exibe de forma compacta e leg√≠vel a estrutura e os tipos das vari√°veis).\n\n\n# head(dados_csv)    # Mostra as primeiras linhas do conjunto de dados\n# summary(dados_csv) # Mostra um resumo estat√≠stico das vari√°veis\n# str(dados_csv)     # Mostra a estrutura do objeto, incluindo tipos de vari√°veis e dimens√µes\n# glimpse(dados_csv)  # Mostra todas as vari√°veis, seus tipos e algumas observa√ß√µes de cada coluna"
  },
  {
    "objectID": "codigos.html#m√≥dulo-2-manipula√ß√£o-e-explora√ß√£o-de-dados",
    "href": "codigos.html#m√≥dulo-2-manipula√ß√£o-e-explora√ß√£o-de-dados",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "Vari√°veis num√©ricas\n\nCont√≠nuas (numeric / dbl): podem assumir qualquer valor dentro de um intervalo, incluindo decimais.\nExemplo: Produtividade (t/ha), √Årea (m¬≤)\nDiscretas (integer / int): assumem apenas valores inteiros.\nExemplo: Parcela (identificador das parcelas)\n\nVari√°veis categ√≥ricas (fatores) (factor / fct)\n\nRepresentam categorias ou grupos que o R reconhece para an√°lises estat√≠sticas.\nExemplo: Tratamento, Variedade\n\nIdeais para an√°lise de vari√¢ncia e compara√ß√µes entre grupos\n\nVari√°veis de texto (character / chr)\n\nCont√™m informa√ß√µes textuais ou descritivas, que n√£o t√™m ordem ou significado num√©rico.\nExemplo: Local (Norte, Sul, Leste)\n\nN√£o s√£o usadas diretamente em c√°lculos estat√≠sticos, mas servem para identificar ou agrupar dados\n\nVari√°veis l√≥gicas (logical / logi)\n\nAssumem apenas dois valores: TRUE ou FALSE\nExemplo: Irrigado\n\n√öteis para condi√ß√µes, filtros e an√°lises condicionais\n\nOutros tipos dispon√≠veis em R\n\nComplexo (complex / sem abrevia√ß√£o comum): n√∫meros complexos, como 1+2i\nRaw (raw / sem abrevia√ß√£o comum): representa dados brutos em bytes\n\nDate (Date / sem abrevia√ß√£o comum): datas no formato \"YYYY-MM-DD\"\n\nPOSIXct / POSIXlt (POSIXct / POSIXlt): datas e horas com tempo\nOrdered factor (ordered / ord): fatores com ordem natural definida\n\n\n\nNeste exemplo, iremos criar vari√°veis de diferentes tipos em R ‚Äî num√©ricas cont√≠nuas, num√©ricas discretas e categ√≥ricas (fatores) ‚Äî e, em seguida, identificar o tipo de cada vari√°vel usando a fun√ß√£o class().\nIsso nos permite compreender como o R armazena cada tipo de dado e como ele ser√° tratado em an√°lises estat√≠sticas.\n\n# Num√©rica cont√≠nua\nnum_cont &lt;- 3.5      # numeric / dbl\nclass(num_cont) # Checando classes\n\n[1] \"numeric\"\n\n# Num√©rica discreta\nnum_disc &lt;- 5L       # integer / int\nclass(num_disc)\n\n[1] \"integer\"\n\n# Fator (categ√≥rica)\ntrat &lt;- factor(c(\"T1\", \"T2\", \"T3\"))  # factor / fct\nclass(trat)\n\n[1] \"factor\"\n\n# Ordered factor\nord_trat &lt;- factor(c(\"Baixo\", \"M√©dio\", \"Alto\"), ordered = TRUE) # ordered / ord\nclass(ord_trat)\n\n[1] \"ordered\" \"factor\" \n\n# Character\nlocal &lt;- c(\"Norte\", \"Sul\")  # character / chr\nclass(local)\n\n[1] \"character\"\n\n# L√≥gica\nirr &lt;- c(TRUE, FALSE)       # logical / logi\nclass(irr)\n\n[1] \"logical\"\n\n# Complexo\ncplx &lt;- 1 + 2i              # complex\nclass(cplx)\n\n[1] \"complex\"\n\n# Raw\nr &lt;- charToRaw(\"A\")         # raw\nclass(r)\n\n[1] \"raw\"\n\n# Datas\nd &lt;- as.Date(\"2025-08-29\")  # Date\nclass(d)\n\n[1] \"Date\"\n\ndt &lt;- as.POSIXct(\"2025-08-29 12:00:00\") # POSIXct\nclass(dt)\n\n[1] \"POSIXct\" \"POSIXt\" \n\n\n\nCriando banco de dados fict√≠cio\nNeste exemplo, iremos criar um banco de dados fict√≠cio de um experimento agr√≠cola com diferentes tipos de vari√°veis: num√©ricas (cont√≠nuas e discretas), categ√≥ricas, l√≥gicas e de texto.\nEm seguida, iremos visualizar o banco de dados e identificar os tipos de vari√°veis, para entender como o R armazena cada tipo e como podemos manipul√°-las em an√°lises estat√≠sticas.\n\n# Exemplo de banco de dados de experimento agr√≠cola\ndados_agro &lt;- data.frame(\n  Parcela = 1:9,                               # Num√©rica discreta (identifica√ß√£o das parcelas)\n  Tratamento = factor(rep(c(\"T1\", \"T2\", \"T3\"), each = 3)), # Fator (categ√≥rica nominal)\n  Variedade = factor(c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\")), # Fator (categ√≥rica nominal)\n  Area = c(10, 10, 10, 12, 12, 12, 11, 11, 11),  # Num√©rica cont√≠nua (m¬≤)\n  Produtividade = c(30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5), # Num√©rica cont√≠nua (t/ha)\n  Irrigado = c(TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE),   # L√≥gica\n  Local = c(\"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\", \"Leste\", \"Leste\") # Texto (character)\n)\n\n\n# Exemplo de banco de dados de experimento agr√≠cola\ndados_agro &lt;- data.frame(\n  Parcela = 1:9,                               # Num√©rica discreta (identifica√ß√£o das parcelas)\n  Tratamento = rep(c(\"T1\", \"T2\", \"T3\"), each = 3), # Fator (categ√≥rica nominal)\n  Variedade = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\"), # Fator (categ√≥rica nominal)\n  Area = c(10, 10, 10, 12, 12, 12, 11, 11, 11),  # Num√©rica cont√≠nua (m¬≤)\n  Produtividade = c(30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5), # Num√©rica cont√≠nua (t/ha)\n  Irrigado = c(TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE),   # L√≥gica\n  Local = c(\"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\", \"Leste\", \"Leste\") # Texto (character)\n)\n\n\nFun√ß√µes para Visualiza√ß√£o e Estrutura de Dados no R\n\nhead(dados_agro)\nMostra as primeiras linhas do conjunto de dados.\n\n√ötil para ter uma vis√£o r√°pida do conte√∫do do banco, verificando se os dados foram importados corretamente.\n\nExemplo de sa√≠da:\n\n\n\nhead(dados_agro) \n\n  Parcela Tratamento Variedade Area Produtividade Irrigado Local\n1       1         T1         A   10          30.5     TRUE Norte\n2       2         T1         A   10          32.0     TRUE Norte\n3       3         T1         A   10          31.0     TRUE Norte\n4       4         T2         B   12          28.0    FALSE   Sul\n5       5         T2         B   12          29.5    FALSE   Sul\n6       6         T2         B   12          30.0    FALSE   Sul\n\n\n\n\nstr(dados_agro)\n\nMostra a estrutura do objeto, permitindo entender rapidamente como os dados est√£o organizados no R.\nCom essa fun√ß√£o, √© poss√≠vel:\n\nVer o n√∫mero de observa√ß√µes (linhas) e o n√∫mero de vari√°veis (colunas) do banco de dados, por exemplo, 9 obs. of 7 variables.\n\nIdentificar o tipo de cada vari√°vel, como int (inteiro), num (num√©rico cont√≠nuo), Factor (categ√≥rica), logi (l√≥gica/boolean) e chr (texto).\n\nConferir alguns valores iniciais de cada coluna, ajudando a verificar se os dados foram importados corretamente e se os tipos est√£o adequados para an√°lise.\n\nEm resumo, str() √© uma fun√ß√£o essencial para inspecionar rapidamente a estrutura e os tipos das vari√°veis, antes de realizar qualquer an√°lise estat√≠stica ou manipula√ß√£o dos dados.\n\nstr(dados_agro)\n\n'data.frame':   9 obs. of  7 variables:\n $ Parcela      : int  1 2 3 4 5 6 7 8 9\n $ Tratamento   : chr  \"T1\" \"T1\" \"T1\" \"T2\" ...\n $ Variedade    : chr  \"A\" \"A\" \"A\" \"B\" ...\n $ Area         : num  10 10 10 12 12 12 11 11 11\n $ Produtividade: num  30.5 32 31 28 29.5 30 33 34.5 32.5\n $ Irrigado     : logi  TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ Local        : chr  \"Norte\" \"Norte\" \"Norte\" \"Sul\" ...\n\n\nObserve que Tratamento e Variedade aparecem como character, ou seja, texto.\nPara an√°lises estat√≠sticas, √© recomendado transformar essas vari√°veis em fatores.\n\n\nsummary(dados_agro)\n\nMostra um resumo estat√≠stico das vari√°veis:\n- Para vari√°veis num√©ricas: m√≠nimo, m√°ximo, m√©dia, quartis\n- Para fatores: contagem de cada n√≠vel\n- Para l√≥gicas: contagem de TRUE e FALSE\n- √ötil para identificar tend√™ncias, valores extremos e distribui√ß√£o dos dados.\n\nsummary(dados_agro)\n\n    Parcela   Tratamento         Variedade              Area    Produtividade  \n Min.   :1   Length:9           Length:9           Min.   :10   Min.   :28.00  \n 1st Qu.:3   Class :character   Class :character   1st Qu.:10   1st Qu.:30.00  \n Median :5   Mode  :character   Mode  :character   Median :11   Median :31.00  \n Mean   :5                                         Mean   :11   Mean   :31.22  \n 3rd Qu.:7                                         3rd Qu.:12   3rd Qu.:32.50  \n Max.   :9                                         Max.   :12   Max.   :34.50  \n  Irrigado          Local          \n Mode :logical   Length:9          \n FALSE:3         Class :character  \n TRUE :6         Mode  :character  \n                                   \n                                   \n                                   \n\n\nVeja novamente que Tratamento e Variedade aparecem como character.\nE n√£o s√£o reconhecidas como fatores.\nE n√£o √© poss√≠vel perceber quais s√£o os n√≠veis de cada vari√°vel categ√≥rica.\n\nConvertendo variaveis categ√≥ricas em fatores\n\nPode-se convert√™-las em fatores usando a fun√ß√£o as.factor():\n\n\ndados_agro$Tratamento &lt;- as.factor(dados_agro$Tratamento)\ndados_agro$Variedade &lt;- as.factor(dados_agro$Variedade)\n\nAgora veja como fica a estrutura dos dados:\n\nstr(dados_agro)\n\n'data.frame':   9 obs. of  7 variables:\n $ Parcela      : int  1 2 3 4 5 6 7 8 9\n $ Tratamento   : Factor w/ 3 levels \"T1\",\"T2\",\"T3\": 1 1 1 2 2 2 3 3 3\n $ Variedade    : Factor w/ 3 levels \"A\",\"B\",\"C\": 1 1 1 2 2 2 3 3 3\n $ Area         : num  10 10 10 12 12 12 11 11 11\n $ Produtividade: num  30.5 32 31 28 29.5 30 33 34.5 32.5\n $ Irrigado     : logi  TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ Local        : chr  \"Norte\" \"Norte\" \"Norte\" \"Sul\" ...\n\n\nAgora sim, Tratamento e variedade aparecem como Factor com 3 n√≠veis cada.\nveja como fica o resumo estat√≠stico dos dados:\n\nsummary(dados_agro)\n\n    Parcela  Tratamento Variedade      Area    Produtividade    Irrigado      \n Min.   :1   T1:3       A:3       Min.   :10   Min.   :28.00   Mode :logical  \n 1st Qu.:3   T2:3       B:3       1st Qu.:10   1st Qu.:30.00   FALSE:3        \n Median :5   T3:3       C:3       Median :11   Median :31.00   TRUE :6        \n Mean   :5                        Mean   :11   Mean   :31.22                  \n 3rd Qu.:7                        3rd Qu.:12   3rd Qu.:32.50                  \n Max.   :9                        Max.   :12   Max.   :34.50                  \n    Local          \n Length:9          \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\nAgora √© poss√≠vel ver a contagem de cada n√≠vel das vari√°veis categ√≥ricas. Ou seja, s√£o 3 n√≠veis em cada vari√°vel (T1, T2, T3 para Tratamento e A, B, C para Variedade).\n\nPode-se convert√™-las em fatores usando a fun√ß√£o factor():\n\nTamb√©m d√° para criar o fator diretamente com a fun√ß√£o factor(), que √© mais flex√≠vel porque permite:\n\nDefinir os n√≠veis (levels)\nDefinir as etiquetas (labels)\n\nOu seja, permite controlar a ordem e o r√≥tulo dos n√≠veis (mais recomendado para ANOVA e modelos, pois evita ordem alfab√©tica indesejada).\n\nPode-se ainda convert√™-las em fatores usando a fun√ß√£o convert_as_factor() do pacote {rstatix}:\n\nA fun√ß√£o convert_as_factor() pode converter uma ou v√°rias colunas ao mesmo tempo.\n\n\nglimpse(dados_agro) (do pacote dplyr)\n\nMostra a estrutura dos dados de forma compacta e leg√≠vel, similar ao str(), mas em formato horizontal:\n\nExibe todas as vari√°veis, seus tipos e algumas observa√ß√µes iniciais\n\nMais f√°cil de ler quando o banco de dados tem muitas colunas\n\nExemplo de sa√≠da (resumida):\n\nglimpse(dados_agro)\n\nRows: 9\nColumns: 7\n$ Parcela       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9\n$ Tratamento    &lt;fct&gt; Controle, Controle, Controle, Adubo, Adubo, Adubo, Bioes‚Ä¶\n$ Variedade     &lt;fct&gt; IPA 11, IPA 11, IPA 11, Campo Lindo, Campo Lindo, Campo ‚Ä¶\n$ Area          &lt;dbl&gt; 10, 10, 10, 12, 12, 12, 11, 11, 11\n$ Produtividade &lt;dbl&gt; 30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5\n$ Irrigado      &lt;lgl&gt; TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE\n$ Local         &lt;chr&gt; \"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\",‚Ä¶\n\n\n\n\n\n\n\n# Exemplo fict√≠cio\ndados &lt;- data.frame(\n  tratamento = rep(c(\"T1\", \"T2\", \"T3\"), each = 4),\n  repeticao = rep(1:4, 3),\n  produtividade = c(30, 32, 28, 31, 35, 36, 34, 37, 25, 27, 26, 28)\n)\n\n# Selecionar colunas e filtrar\ndados |&gt; dplyr::select(tratamento, produtividade) |&gt; filter(produtividade &gt; 30)\n\n  tratamento produtividade\n1         T1            32\n2         T1            31\n3         T2            35\n4         T2            36\n5         T2            34\n6         T2            37\n\n# Resumo estat√≠stico\ndados |&gt;\n  group_by(tratamento) |&gt;\n  summarise(\n    media = mean(produtividade),\n    sd = sd(produtividade)\n  )\n\n# A tibble: 3 √ó 3\n  tratamento media    sd\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 T1          30.2  1.71\n2 T2          35.5  1.29\n3 T3          26.5  1.29\n\n\n\n\n\n\n\n# Histograma\nggplot(dados, aes(x = produtividade)) +\n  geom_histogram(binwidth = 2, fill = \"skyblue\", color = \"black\")\n\n\n\n\n\n\n\n# Boxplot\nggplot(dados, aes(x = tratamento, y = produtividade)) +\n  geom_boxplot(fill = \"orange\")"
  },
  {
    "objectID": "codigos.html#m√≥dulo-3-an√°lise-de-vari√¢ncia-anova",
    "href": "codigos.html#m√≥dulo-3-an√°lise-de-vari√¢ncia-anova",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "# Primeiro transformar vari√°veis em fatores\ndados$tratamento &lt;- factor(dados$tratamento)\ndados$repeticao &lt;- factor(dados$repeticao)\n\n# ANOVA usando aov()\nmodelo &lt;- aov(produtividade ~ tratamento, data = dados)\nsummary(modelo)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ntratamento   2 163.50   81.75   39.24 3.59e-05 ***\nResiduals    9  18.75    2.08                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ANOVA usando rstatix\ndados |&gt; anova_test(produtividade ~ tratamento)\n\nANOVA Table (type II tests)\n\n      Effect DFn DFd     F        p p&lt;.05   ges\n1 tratamento   2   9 39.24 3.59e-05     * 0.897\n\n# ANOVA usando ExpDes.pt\ndic(\n  trat = dados$tratamento,\n  resp = dados$produtividade,\n  quali = TRUE,\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nQuadro da analise de variancia\n------------------------------------------------------------------------\n           GL     SQ     QM    Fc      Pr&gt;Fc\nTratamento  2 163.50 81.750 39.24 3.5934e-05\nResiduo     9  18.75  2.083                 \nTotal      11 182.25                        \n------------------------------------------------------------------------\nCV = 4.69 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos ( Shapiro-Wilk ) \nValor-p:  0.5375769 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\n------------------------------------------------------------------------\nTeste de homogeneidade de variancia \nvalor-p:  0.8663487 \nDe acordo com o teste de bartlett a 5% de significancia, as variancias podem ser consideradas homogeneas.\n------------------------------------------------------------------------\n\nTeste de Tukey\n------------------------------------------------------------------------\nGrupos Tratamentos Medias\na    T2      35.5 \n b   T1      30.25 \n  c      T3      26.5 \n------------------------------------------------------------------------\n\n# ANOVA usando easyanova\neasyanova::ea1(dados[-2], design = 1, plot = 2)\n\n\n\n\n\n\n\n\n$`Analysis of variance`\n           df type I SS mean square F value    p&gt;F\ntreatments  2    163.50     81.7500   39.24 &lt;0.001\nResiduals   9     18.75      2.0833       -      -\n\n$Means\n  treatment  mean     sd    sem min max tukey snk duncan t scott_knott\n1        T2 35.50 1.2910 0.7217  34  37     a   a      a a           a\n2        T1 30.25 1.7078 0.7217  28  32     b   b      b b           b\n3        T3 26.50 1.2910 0.7217  25  28     c   c      c c           c\n\n$`Multiple comparison test`\n     pair contrast p(tukey) p(snk) p(duncan)   p(t)\n1 T2 - T1     5.25   0.0016 0.0006    0.0006 0.0006\n2 T2 - T3     9.00   0.0000 0.0000    0.0000 0.0000\n3 T1 - T3     3.75   0.0128 0.0051    0.0051 0.0051\n\n$`Residual analysis`\n$`Residual analysis`$`residual analysis`\n                             values\np.value Shapiro-Wilk test    0.5376\np.value Bartlett test        0.8663\ncoefficient of variation (%) 4.6900\nfirst value most discrepant  3.0000\nsecond value most discrepant 2.0000\nthird value most discrepant  8.0000\n\n$`Residual analysis`$residuals\n    1     2     3     4     5     6     7     8     9    10    11    12 \n-0.25  1.75 -2.25  0.75 -0.50  0.50 -1.50  1.50 -1.50  0.50 -0.50  1.50 \n\n$`Residual analysis`$`standardized residuals`\n         1          2          3          4          5          6          7 \n-0.1914854  1.3403980 -1.7233688  0.5744563 -0.3829708  0.3829708 -1.1489125 \n         8          9         10         11         12 \n 1.1489125 -1.1489125  0.3829708 -0.3829708  1.1489125 \n\n\nTestes de Pressupostos\nAntes da an√°lise de vari√¢ncia (ANOVA), foi realizada a verifica√ß√£o dos pressupostos de normalidade dos res√≠duos e homogeneidade das vari√¢ncias, que s√£o condi√ß√µes necess√°rias para a validade do teste F.\nNormalidade dos res√≠duos\n\nO teste de Shapiro-Wilk foi aplicado sobre os res√≠duos do modelo, verificando se a distribui√ß√£o se aproxima da normal.\nAl√©m disso, a normalidade foi testada dentro de cada grupo experimental utilizando a fun√ß√£o shapiro_test() do pacote rstatix, o que permite avaliar poss√≠veis desvios em tratamentos espec√≠ficos.\nQuando o valor de p &gt; 0,05, n√£o se rejeita a hip√≥tese nula de normalidade, indicando que os res√≠duos podem ser considerados normalmente distribu√≠dos.\n\n\n# Normalidade\nshapiro.test(residuals(modelo))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(modelo)\nW = 0.94298, p-value = 0.5376\n\n# Usando pacote rstatix e fazendo normalidade por grupo\ndados |&gt; group_by(tratamento) |&gt; rstatix::shapiro_test(produtividade)\n\n# A tibble: 3 √ó 4\n  tratamento variable      statistic     p\n  &lt;fct&gt;      &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt;\n1 T1         produtividade     0.971 0.850\n2 T2         produtividade     0.993 0.972\n3 T3         produtividade     0.993 0.972\n\n\nHomogeneidade das vari√¢ncias\n\nPara verificar se os tratamentos apresentam vari√¢ncias homog√™neas, foram aplicados tr√™s testes:\n\nTeste de Bartlett: sens√≠vel a desvios de normalidade, mas adequado quando os dados s√£o normais.\nTeste de Levene: mais robusto quando a normalidade n√£o √© estritamente atendida.\n\n\n\n# Homogeneidade\n## Teste de Bartlett\nbartlett.test(produtividade ~ tratamento, data = dados)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  produtividade by tratamento\nBartlett's K-squared = 0.28694, df = 2, p-value = 0.8663\n\n## Teste de Levene\nrstatix::levene_test(produtividade ~ tratamento, data = dados)\n\n# A tibble: 1 √ó 4\n    df1   df2 statistic     p\n  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1     2     9     0.158 0.856\n\n\n\nEm todos os testes, valores de p &gt; 0,05 indicam que n√£o h√° evid√™ncias para rejeitar a hip√≥tese de homogeneidade das vari√¢ncias, atendendo ao pressuposto da ANOVA.\n\nDessa forma, a an√°lise de vari√¢ncia pode ser conduzida com confian√ßa, uma vez que os pressupostos de normalidade e homogeneidade foram verificados.\nCompara√ß√µes de M√©dias\n\n# Tukey no R base\nTukeyHSD(modelo)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = produtividade ~ tratamento, data = dados)\n\n$tratamento\n       diff        lwr        upr     p adj\nT2-T1  5.25   2.400421  8.0995788 0.0015767\nT3-T1 -3.75  -6.599579 -0.9004212 0.0127984\nT3-T2 -9.00 -11.849579 -6.1504212 0.0000269\n\n# Tukey no rstatix\ndados |&gt; tukey_hsd(produtividade ~ tratamento)\n\n# A tibble: 3 √ó 9\n  term       group1 group2 null.value estimate conf.low conf.high     p.adj\n* &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 tratamento T1     T2              0     5.25     2.40     8.10  0.00158  \n2 tratamento T1     T3              0    -3.75    -6.60    -0.900 0.0128   \n3 tratamento T2     T3              0    -9      -11.8     -6.15  0.0000269\n# ‚Ñπ 1 more variable: p.adj.signif &lt;chr&gt;\n\n# M√©dias ajustadas\n# Emmeans\nemm &lt;- emmeans(modelo, ~ tratamento)\ngrupos &lt;- multcomp::cld(emm, Letters = letters, adjust = \"tukey\")\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nprint(grupos)\n\n tratamento emmean    SE df lower.CL upper.CL .group\n T3           26.5 0.722  9     24.4     28.6  a    \n T1           30.2 0.722  9     28.1     32.4   b   \n T2           35.5 0.722  9     33.4     37.6    c  \n\nConfidence level used: 0.95 \nConf-level adjustment: sidak method for 3 estimates \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n\n\n\nAnova\nNo DBC (delineamento em blocos casualizados) a diferen√ßa principal √© que voc√™ precisa considerar o efeito de blocos no modelo. Seguindo o mesmo estilo da sua aula de DIC, aqui est√° a vers√£o para DBC:\n\n# ANOVA usando aov()\n# Aqui usamos Error(bloco) ou bloco como efeito\nmodelo &lt;- aov(produtividade ~ tratamento + repeticao, data = dados)\nsummary(modelo)\n\n            Df Sum Sq Mean Sq F value  Pr(&gt;F)    \ntratamento   2 163.50   81.75 127.957 1.2e-05 ***\nrepeticao    3  14.92    4.97   7.783  0.0172 *  \nResiduals    6   3.83    0.64                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# ANOVA usando rstatix\ndados |&gt; anova_test(produtividade ~ tratamento + repeticao)\n\nANOVA Table (type II tests)\n\n      Effect DFn DFd       F       p p&lt;.05   ges\n1 tratamento   2   6 127.957 1.2e-05     * 0.977\n2  repeticao   3   6   7.783 1.7e-02     * 0.796\n\n# ANOVA usando ExpDes.pt\ndbc(\n  trat = dados$tratamento,\n  bloco = dados$repeticao,\n  resp = dados$produtividade,\n  quali = TRUE,\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nQuadro da analise de variancia\n------------------------------------------------------------------------\n           GL      SQ     QM      Fc    Pr&gt;Fc\nTratamento  2 163.500 81.750 127.957 0.000012\nBloco       3  14.917  4.972   7.783 0.017195\nResiduo     6   3.833  0.639                 \nTotal      11 182.250                        \n------------------------------------------------------------------------\nCV = 2.6 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos \nvalor-p:  0.4793843 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\n------------------------------------------------------------------------\nTeste de homogeneidade de variancia \nvalor-p:  0.1530654 \nDe acordo com o teste de oneillmathews a 5% de significancia, as variancias podem ser consideradas homogeneas.\n------------------------------------------------------------------------\n\nTeste de Tukey\n------------------------------------------------------------------------\nGrupos Tratamentos Medias\na    T2      35.5 \n b   T1      30.25 \n  c      T3      26.5 \n------------------------------------------------------------------------\n\n# ANOVA usando easyanova\n# design = 2 corresponde a DBC\neasyanova::ea1(dados, design = 2, plot = 2)\n\n\n\n\n\n\n\n\n$`Analysis of variance`\n           df type III SS mean square  F value    p&gt;F\ntreatments  2    163.5000     81.7500 127.9565 &lt;0.001\nblocks      3     14.9167      4.9722   7.7826 0.0172\nresiduals   6      3.8333      0.6389        -      -\n\n$`Adjusted means`\n  treatment adjusted.mean     sd    sem min max tukey snk duncan t scott_knott\n1        T2         35.50 1.2910 0.3997  34  37     a   a      a a           a\n2        T1         30.25 1.7078 0.3997  28  32     b   b      b b           b\n3        T3         26.50 1.2910 0.3997  25  28     c   c      c c           c\n\n$`Multiple comparison test`\n     pair contrast p(tukey) p(snk) p(duncan)  p(t)\n1 T2 - T1     5.25   0.0002  1e-04     1e-04 1e-04\n2 T2 - T3     9.00   0.0000  0e+00     0e+00 0e+00\n3 T1 - T3     3.75   0.0014  6e-04     6e-04 6e-04\n\n$`Residual analysis`\n$`Residual analysis`$`residual analysis`\n                              values\np.value Shapiro-Wilk test     0.4794\np.value Bartlett test         0.8663\ncoefficient of variation (%)  2.6000\nfirst value most discrepant  11.0000\nsecond value most discrepant  3.0000\nthird value most discrepant   2.0000\n\n$`Residual analysis`$residuals\n          1           2           3           4           5           6 \n 0.50000000  0.83333333 -0.83333333 -0.50000000  0.25000000 -0.41666667 \n          7           8           9          10          11          12 \n-0.08333333  0.25000000 -0.75000000 -0.41666667  0.91666667  0.25000000 \n\n$`Residual analysis`$`standardized residuals`\n         1          2          3          4          5          6          7 \n 0.8469896  1.4116493 -1.4116493 -0.8469896  0.4234948 -0.7058246 -0.1411649 \n         8          9         10         11         12 \n 0.4234948 -1.2704843 -0.7058246  1.5528142  0.4234948 \n\n\nObserva√ß√µes importantes:\n\nNo aov(), o termo + bloco garante que a varia√ß√£o entre blocos seja considerada.\nNo ExpDes.pt, usamos dbc() no lugar de dic().\nNo easyanova, o argumento design = 2 √© usado para DBC.\n\nTestes de Pressupostos\n\n# Normalidade\nshapiro.test(residuals(modelo))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(modelo)\nW = 0.93854, p-value = 0.4794\n\n# Usando pacote rstatix e fazendo normalidade por grupo\ndados |&gt; group_by(tratamento) |&gt; rstatix::shapiro_test(produtividade)\n\n# A tibble: 3 √ó 4\n  tratamento variable      statistic     p\n  &lt;fct&gt;      &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt;\n1 T1         produtividade     0.971 0.850\n2 T2         produtividade     0.993 0.972\n3 T3         produtividade     0.993 0.972\n\n# Homogeneidade\n## Teste de Bartlett\nbartlett.test(produtividade ~ tratamento, data = dados)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  produtividade by tratamento\nBartlett's K-squared = 0.28694, df = 2, p-value = 0.8663\n\n## Teste de Levene\nrstatix::levene_test(produtividade ~ tratamento, data = dados)\n\n# A tibble: 1 √ó 4\n    df1   df2 statistic     p\n  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1     2     9     0.158 0.856\n\n## Teste de ONeill e Mathews\noneilldbc(trat = dados$tratamento, resp = dados$produtividade, bloco = dados$repeticao)\n\n[1] 0.1530654\n\n\nEm DBC tamb√©m foi realizado Teste de O‚ÄôNeill e Mathews, espec√≠fico para experimentos em blocos casualizados (DBC), sendo recomendado como alternativa robusta para esse delineamento.\n\nEm todos os testes, valores de p &gt; 0,05 indicam que n√£o h√° evid√™ncias para rejeitar a hip√≥tese de homogeneidade das vari√¢ncias, atendendo ao pressuposto da ANOVA.\n\nCompara√ß√µes de M√©dias\n\n# Tukey no R base\nTukeyHSD(modelo)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = produtividade ~ tratamento + repeticao, data = dados)\n\n$tratamento\n       diff        lwr       upr     p adj\nT2-T1  5.25   3.515829  6.984171 0.0002167\nT3-T1 -3.75  -5.484171 -2.015829 0.0013765\nT3-T2 -9.00 -10.734171 -7.265829 0.0000092\n\n$repeticao\n          diff        lwr         upr     p adj\n2-1  1.6666667 -0.5925501  3.92588339 0.1472526\n3-1 -0.6666667 -2.9258834  1.59255006 0.7441939\n4-1  2.0000000 -0.2592167  4.25921672 0.0796674\n3-2 -2.3333333 -4.5925501 -0.07411661 0.0438895\n4-2  0.3333333 -1.9258834  2.59255006 0.9535148\n4-3  2.6666667  0.4074499  4.92588339 0.0248704\n\n# Tukey no rstatix\ndados |&gt; tukey_hsd(produtividade ~ tratamento)\n\n# A tibble: 3 √ó 9\n  term       group1 group2 null.value estimate conf.low conf.high     p.adj\n* &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 tratamento T1     T2              0     5.25     2.40     8.10  0.00158  \n2 tratamento T1     T3              0    -3.75    -6.60    -0.900 0.0128   \n3 tratamento T2     T3              0    -9      -11.8     -6.15  0.0000269\n# ‚Ñπ 1 more variable: p.adj.signif &lt;chr&gt;\n\n# M√©dias ajustadas\n# Emmeans\nemm &lt;- emmeans(modelo, ~ tratamento)\ngrupos &lt;- multcomp::cld(emm, Letters = letters, adjust = \"tukey\")\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\nprint(grupos)\n\n tratamento emmean  SE df lower.CL upper.CL .group\n T3           26.5 0.4  6     25.2     27.8  a    \n T1           30.2 0.4  6     28.9     31.6   b   \n T2           35.5 0.4  6     34.2     36.8    c  \n\nResults are averaged over the levels of: repeticao \nConfidence level used: 0.95 \nConf-level adjustment: sidak method for 3 estimates \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n\n\n\n\n# Exemplo com dois fatores\ndados2 &lt;- expand.grid(\n  adubacao = c(\"A1\", \"A2\"),\n  cultivar = c(\"C1\", \"C2\", \"C3\"),\n  rep = 1:4\n)\nset.seed(123)\ndados2$produtividade &lt;- rnorm(24, mean = 30, sd = 3)\n\n# ANOVA\nmodelo2 &lt;- aov(produtividade ~ adubacao * cultivar, data = dados2)\nsummary(modelo2)\n\n                  Df Sum Sq Mean Sq F value Pr(&gt;F)\nadubacao           1   2.09   2.089   0.217  0.647\ncultivar           2   1.07   0.536   0.056  0.946\nadubacao:cultivar  2  13.72   6.861   0.712  0.504\nResiduals         18 173.43   9.635               \n\n# ExpDes.pt\nfat2.dic(\n  fator1 = dados2$adubacao,\n  fator2 = dados2$cultivar,\n  resp = dados2$produtividade,\n  quali = c(TRUE, TRUE),\n  mcomp = \"tukey\"\n)\n\n------------------------------------------------------------------------\nLegenda:\nFATOR 1:  F1 \nFATOR 2:  F2 \n------------------------------------------------------------------------\n\n\nQuadro da analise de variancia\n------------------------------------------------------------------------\n        GL      SQ QM      Fc   Pr&gt;Fc\nF1       1   2.089  3 0.21680 0.64708\nF2       2   1.073  2 0.05566 0.94602\nF1*F2    2  13.723  4 0.71212 0.50391\nResiduo 18 173.435  5                \nTotal   23 190.319  1                \n------------------------------------------------------------------------\nCV = 10.36 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos (Shapiro-Wilk)\nvalor-p:  0.6606527 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\nInteracao nao significativa: analisando os efeitos simples\n------------------------------------------------------------------------\nF1\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     A1 30.26899\n2     A2 29.67895\n------------------------------------------------------------------------\nF2\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     C1 29.67946\n2     C2 30.16574\n3     C3 30.07672\n------------------------------------------------------------------------"
  },
  {
    "objectID": "codigos.html#m√≥dulo-4-regress√£o",
    "href": "codigos.html#m√≥dulo-4-regress√£o",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "dose &lt;- c(0, 50, 100, 150, 200)\nprod &lt;- c(20, 28, 35, 40, 38)\ndados_reg &lt;- data.frame(dose, prod)\n\nmodelo_reg &lt;- lm(prod ~ dose, data = dados_reg)\na &lt;- summary(modelo_reg)\n\n# Coeficientes\ncoeficientes &lt;- coef(modelo_reg)\nintercepto &lt;- round(coeficientes[1], 2) # sem sinal extra\nslope &lt;- formatC(coeficientes[2], format = \"f\", digits = 2, flag = \"+\") # sempre com sinal\n\n# Estat√≠sticas do modelo\nr2 &lt;- round(a$r.squared, 4)\nf_value &lt;- a$fstatistic[1]\ndf1 &lt;- a$fstatistic[2]\ndf2 &lt;- a$fstatistic[3]\np_value_anova &lt;- pf(f_value, df1, df2, lower.tail = FALSE)\n\n\n\n\n# Equa√ß√£o no formato correto\nequacao &lt;- paste0(\"y = \", intercepto, slope, \"x\")\n\nlegenda &lt;- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", f_value,\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n\n\ndados_reg |&gt;\n  ggplot(aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  annotate(\"text\",\n           x = 100, y = 10,\n           label = legenda,\n           hjust = 0, size = 5) +\n  labs(x = \"Frequ√™ncia de irriga√ß√£o\", y = \"CRA (%)\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Ajustar modelo de regress√£o quadr√°tica\nmodelo_quad &lt;- lm(prod ~ dose + I(dose^2), data = dados_reg)\na &lt;- summary(modelo_quad)\na\n\n\nCall:\nlm(formula = prod ~ dose + I(dose^2), data = dados_reg)\n\nResiduals:\n      1       2       3       4       5 \n 0.5429 -0.9714 -0.3429  1.4286 -0.6571 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept) 19.4571429  1.3021176  14.943  0.00445 **\ndose         0.2217143  0.0308492   7.187  0.01882 * \nI(dose^2)   -0.0006286  0.0001479  -4.250  0.05116 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.384 on 2 degrees of freedom\nMultiple R-squared:  0.9858,    Adjusted R-squared:  0.9715 \nF-statistic: 69.21 on 2 and 2 DF,  p-value: 0.01424\n\n# Coeficientes da regress√£o quadr√°tica (com mais casas decimais)\ncoef_quad &lt;- coef(modelo_quad)\nintercepto &lt;- formatC(coef_quad[1], format = \"f\", digits = 4)\nlinear     &lt;- formatC(coef_quad[2], format = \"f\", digits = 4, flag = \"+\")\nquadratico &lt;- formatC(coef_quad[3], format = \"f\", digits = 4, flag = \"+\") \n# usei 6 casas para o termo quadr√°tico porque geralmente √© bem pequeno\n\n# Estat√≠sticas do modelo\nr2 &lt;- round(a$r.squared, 4)\nf_value &lt;- a$fstatistic[1]\ndf1 &lt;- a$fstatistic[2]\ndf2 &lt;- a$fstatistic[3]\np_value_anova &lt;- pf(f_value, df1, df2, lower.tail = FALSE)\n\n# Equa√ß√£o para legenda\nequacao &lt;- paste0(\"y = \", intercepto, \" \", linear, \"x \", quadratico, \"x¬≤\")\nlegenda &lt;- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", round(f_value, 2),\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n# Gr√°fico\nlibrary(ggplot2)\n\nregressao_quad &lt;- ggplot(dados_reg, aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  stat_smooth(\n    method = \"lm\",\n    formula = y ~ x + I(x^2),\n    se = FALSE,\n    color = \"black\"\n  ) +\n  annotate(\"text\", x = 50, y = 10, label = legenda, hjust = 0, size = 5) +\n  labs(x = \"Dose\", y = \"Produ√ß√£o\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n\n# Exibir gr√°fico\nregressao_quad"
  },
  {
    "objectID": "codigos.html#m√≥dulo-5-relat√≥rios-e-projeto-final",
    "href": "codigos.html#m√≥dulo-5-relat√≥rios-e-projeto-final",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "Este pr√≥prio arquivo √© um exemplo.\n\nPode ser exportado em HTML, Word ou PDF."
  },
  {
    "objectID": "codigos.html#projeto-final",
    "href": "codigos.html#projeto-final",
    "title": "Exemplos de C√≥digos",
    "section": "",
    "text": "Analise um conjunto de dados agr√≠colas (real ou fornecido):\n- Estruture os dados no Excel/CSV.\n- Importe para o R.\n- Realize ANOVA (com aov(), ExpDes.pt, easyanova e rstatix).\n- Teste pressupostos.\n- Se necess√°rio, ajuste modelos de regress√£o.\n- Gere gr√°ficos com ggplot2.\n- Organize os resultados em relat√≥rio RMarkdown."
  },
  {
    "objectID": "graficos.html",
    "href": "graficos.html",
    "title": "Construindo Gr√°ficos",
    "section": "",
    "text": "A elabora√ß√£o dos gr√°ficos neste trabalho ser√° realizada utilizando o pacote ggplot2.\nPara os exemplos apresentados, ser√° utilizado o banco de dados dados, que cont√©m as seguintes vari√°veis:\nEsse banco de dados cont√©m informa√ß√µes experimentais essenciais para avaliar o efeito de micorrizas e diferentes l√¢minas de irriga√ß√£o sobre o crescimento e a produ√ß√£o vegetal ao longo do tempo.\nEsse conjunto de informa√ß√µes possibilita tanto a constru√ß√£o de gr√°ficos explorat√≥rios (como boxplots e histogramas) quanto a representa√ß√£o de m√©dias e grupos de compara√ß√£o, atendendo √†s necessidades da an√°lise estat√≠stica e da apresenta√ß√£o dos resultados.\nBanco de dados\ndados |&gt; head()\n\n  FMICO LIRRIG DAS    MAP      DPAP   MDC       DPDC  MNF      DPNF\n1    F0     L4  10  8.175 0.6291529 1.650 0.05773503 4.25 0.5000000\n2    F0     L4  10  9.000 1.4142136 1.650 0.23804761 4.50 0.5773503\n3    F0     L4  10  9.075 0.2872281 1.550 0.12909945 4.00 0.0000000\n4    F0     L4  30 17.300 1.0230673 3.850 0.05773503 8.75 0.5000000\n5    F0     L4  30 17.400 1.3291601 3.725 0.05000000 8.75 0.5000000\n6    F0     L4  30 19.000 3.2659863 3.925 0.34034296 9.25 0.9574271\nEstrutura dos dados\nstr(dados)\n\n'data.frame':   81 obs. of  9 variables:\n $ FMICO : Factor w/ 3 levels \"F0\",\"F1\",\"F2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ LIRRIG: Factor w/ 3 levels \"L4\",\"L6\",\"L8\": 1 1 1 1 1 1 1 1 1 2 ...\n $ DAS   : int  10 10 10 30 30 30 50 50 50 10 ...\n $ MAP   : num  8.18 9 9.07 17.3 17.4 ...\n $ DPAP  : num  0.629 1.414 0.287 1.023 1.329 ...\n $ MDC   : num  1.65 1.65 1.55 3.85 3.73 ...\n $ DPDC  : num  0.0577 0.238 0.1291 0.0577 0.05 ...\n $ MNF   : num  4.25 4.5 4 8.75 8.75 9.25 9.25 9.75 10 4.25 ...\n $ DPNF  : num  0.5 0.577 0 0.5 0.5 ..."
  },
  {
    "objectID": "graficos.html#gr√°fico-de-boxplot",
    "href": "graficos.html#gr√°fico-de-boxplot",
    "title": "Construindo Gr√°ficos",
    "section": "Gr√°fico de boxplot",
    "text": "Gr√°fico de boxplot\n\nVari√°vel dependente: MAP\n\nVari√°veis independentes: FMICO, LIRRIG, DAS\n\n\nModelo 1\n\n\ndados |&gt; \n  ggplot(aes(x=DAS, y=MAP, fill=LIRRIG))+ #Escolhe que vari√°veis aparecem no eixo X, Y e grupo\n  geom_boxplot()+ #Seleciona tipo de gr√°fico de boxplot\n  facet_grid(~FMICO)+ # Agrupa gr√°fico por MICO\n  theme_bw() #Estilo de gr√°fico\n\n\n\n\n\n\n\n\n\n\n\nModelo 2\n\n\ndados |&gt; \n  ggplot(aes(x=DAS, y=MAP, fill=FMICO))+ #Escolhe que vari√°veis aparecem no eixo X, Y e grupo\n  geom_boxplot()+ #Seleciona tipo de gr√°fico de boxplot\n  facet_grid(~LIRRIG)+ # Agrupa gr√°fico por LRRIG\n  theme_bw() #Estilo de gr√°fico\n\n\n\n\n\n\n\n\n\n\n\nModelo 3\n\n\ndados |&gt; \n  ggplot(aes(x=FMICO, y=MAP, fill=LIRRIG))+ #Escolhe que vari√°veis aparecem no eixo X, Y e grupo\n  geom_boxplot()+ #Seleciona tipo de gr√°fico de boxplot\n  facet_grid(~DAS)+ # Agrupa gr√°fico por DAS \n  theme_bw() #Estilo de gr√°fico\n\n\n\n\n\n\n\n\n\n\n\nModelo 4\n\n\ndados |&gt; \n  ggplot(aes(x=LIRRIG, y=MAP, fill=FMICO))+ #Escolhe que vari√°veis aparecem no eixo X, Y e grupo\n  geom_boxplot()+ #Seleciona tipo de gr√°fico de boxplot\n  facet_grid(~DAS)+ # Agrupa gr√°fico por DAS \n  theme_bw() #Estilo de gr√°fico\n\n\n\n\n\n\n\n\n\nAlterando t√≠tulos dos eixos\n\n\nModelo 5\n\n\ndados |&gt; \n  ggplot(aes(x=LIRRIG, y=MAP, fill=FMICO))+ #Escolhe que vari√°veis aparecem no eixo X, Y e grupo\n  geom_boxplot()+ #Seleciona tipo de gr√°fico de boxplot\n  facet_grid(~DAS)+ # Agrupa gr√°fico por DAS \n  theme_bw()+ #Estilo de gr√°fico\n  xlab(\"Dias\")+ #Altera o t√≠tulo do eixo X\n  ylab(\"Nome da vari√°vel no eixo y\") #Altera o t√≠tulo do eixo Y"
  },
  {
    "objectID": "graficos.html#gr√°fico-de-linhas-e-barras-de-erros",
    "href": "graficos.html#gr√°fico-de-linhas-e-barras-de-erros",
    "title": "Construindo Gr√°ficos",
    "section": "Gr√°fico de linhas e barras de erros",
    "text": "Gr√°fico de linhas e barras de erros\nPara fazer gr√°fico de linhas, a vari√°vel no eixo X precisa ser uma vari√°vel num√©rica, como DAS\n\nModelo 1\n\n\n#chama arquivo de dados\ndados |&gt; \n  \n  # Realizar o agrupamento dos dados por FMICO, LIRRIG e DAS\n  group_by(FMICO, LIRRIG,DAS) |&gt; \n  \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna MAP dentro de cada grupo\n  get_summary_stats(MAP, type=\"mean_se\") |&gt; \n  \n  # Criar o gr√°fico de linhas\n  ggplot(aes(x = DAS, #Vari√°vel no eixo X\n             y = mean, #Vari√°vel no eixo Y (essa deve ser a var√°vel analisada (dependente))\n             fill = LIRRIG)) + #Vari√°vel na legenda (as linhas ter√£o as cores agrupadas conforme essa vari√°vel)\n  \n  # Adicionar as linhas de dados\n  geom_line(aes(\n    color=LIRRIG) #define as cores das linhas de acordo com LIRRIG\n    )+\n  \n  # Adicionar pontos nas linhas (opcional)\n  geom_point(aes(\n    color=LIRRIG) #define as cores das linhas de acordo com LIRRIG\n    )+\n  \n  #Adiciona barras de erros nos pontos\n  geom_errorbar(aes(ymax = mean + se, #Barra de erro para baixo (m√©dia - erro)\n                   ymin = mean - se, #Barra de erro para cima (m√©dia + erro) \n                   width=2, #define a largura da barra de erro \n                   color=LIRRIG #define as cores das linhas de acordo com LIRRIG\n                   ))+\n  \n  #Agrupa os gr√°ficos por FMICO\n  facet_grid(~FMICO)+\n  \n  #Define o estilo do gr√°fico\n  theme_bw()+\n  \n  #Altera t√≠tulo do eixo X\n  xlab(\"Nome da vari√°vel no eixo X (DAS)\")+\n\n  #Altera t√≠tulo do eixo Y\n  ylab(\"Nome da vari√°vel no eixo Y (MAP)\")\n\n\n\n\n\n\n\n\n\n\n\nModelo 2\n\nAdicionando letras nas linhas:\n\n\n#chama arquivo de dados\ndados |&gt; \n  \n  # Realizar o agrupamento dos dados por FMICO, LIRRIG e DAS\n  group_by(FMICO, LIRRIG,DAS) |&gt; \n  \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna MAP dentro de cada grupo\n  get_summary_stats(MAP, type=\"mean_se\") |&gt; \n  \n# Criar o gr√°fico de linhas\n  ggplot(aes(x = DAS, #Vari√°vel no eixo X\n             y = mean, #Vari√°vel no eixo Y (essa deve ser a var√°vel analisada (dependente))\n             fill = LIRRIG)) + #Vari√°vel na legenda (as linhas ter√£o as cores agrupadas conforme essa vari√°vel)\n  \n  # Adicionar as linhas de dados\n  geom_line(aes(\n    color=LIRRIG) #define as cores das linhas de acordo com LIRRIG\n    )+\n  \n  # Adicionar pontos nas linhas (opcional)\n  geom_point(aes(\n    color=LIRRIG) #define as cores das linhas de acordo com LIRRIG\n    )+\n  \n  #Adiciona barras de erros nos pontos\n  geom_errorbar(aes(ymax = mean + se, #Barra de erro para baixo (m√©dia - erro)\n                   ymin = mean - se, #Barra de erro para cima (m√©dia + erro) \n                   width=2, #define a largura da barra de erro \n                   color=LIRRIG #define as cores das linhas de acordo com LIRRIG\n                   ))+\n  \n  #Agrupa os gr√°ficos por FMICO\n  facet_grid(~FMICO)+\n  \n  #Define o estilo do gr√°fico\n  theme_bw()+\n  \n  #Altera t√≠tulo do eixo X\n  xlab(\"Nome da vari√°vel no eixo X (DAS)\")+\n\n  #Altera t√≠tulo do eixo Y\n  ylab(\"Nome da vari√°vel no eixo Y (MAP)\")\n\n\n\n\n\n\n\n  # Adiocionar letras acima das barras\n  geom_text(aes(label = c(\n    \"a\"#1\n    \n    )),position = position_dodge(1), vjust = -1)\n\nmapping: label = ~c(\"a\") \ngeom_text: parse = FALSE, check_overlap = FALSE, size.unit = mm, na.rm = FALSE\nstat_identity: na.rm = FALSE\nposition_dodge"
  },
  {
    "objectID": "graficos.html#gr√°fico-de-pontos-e-barras-de-erros",
    "href": "graficos.html#gr√°fico-de-pontos-e-barras-de-erros",
    "title": "Construindo Gr√°ficos",
    "section": "Gr√°fico de pontos e barras de erros",
    "text": "Gr√°fico de pontos e barras de erros\n\nModelo1\n\n\ndados |&gt;\n  group_by(FMICO, LIRRIG, DAS) |&gt;\n  get_summary_stats(MAP, type = \"mean_se\") |&gt;\n  convert_as_factor(DAS) |&gt;\n  \n  ggplot(aes(\n    x = FMICO,\n    y = mean,\n    fill = LIRRIG\n  )) +\n  geom_point(aes(color = LIRRIG), position = position_dodge(width = 0.2)) +\n  geom_errorbar(\n    aes(\n      x = FMICO,\n      ymax = mean + se,\n      ymin = mean - se,\n      width = 0.1,\n      color = LIRRIG\n    ),\n    position = position_dodge(width = 0.2)\n  ) +\n  facet_grid(~DAS) +\n  theme_bw() +\n  xlab(\"Nome da vari√°vel no eixo X (DAS)\") +\n  ylab(\"Nome da vari√°vel no eixo Y (MAP)\")\n\n\n\n\n\n\n\n\n\n\n\nModelo2\n\nAdicionando signific√¢ncia entre tratamentos.\n\n\nteste=\ndados |&gt; \n  group_by(DAS, FMICO) |&gt;\n  pairwise_t_test(MAP ~ LIRRIG, p.adjust.method = \"bonferroni\") |&gt; \n  dplyr::select(-`p`, -`p.signif`) |&gt; \n  add_xy_position(x = \"DAS\") |&gt;  \n  filter(`p.adj`&lt;0.05 ) \n\n\nlibrary(ggpubr)\n\ndados |&gt;\n  group_by(FMICO, LIRRIG, DAS) |&gt;\n  get_summary_stats(MAP, type = \"mean_se\") |&gt;\n  convert_as_factor(DAS) |&gt;\n  \n  ggplot(aes(\n    x = FMICO,\n    y = mean,\n    fill = LIRRIG\n  )) +\n  geom_point(aes(color = LIRRIG), position = position_dodge(width = 0.2)) +\n  geom_errorbar(\n    aes(\n      x = FMICO,\n      ymax = mean + se,\n      ymin = mean - se,\n      width = 0.1,\n      color = LIRRIG\n    ),\n    position = position_dodge(width = 0.2)\n  ) +\n  facet_grid(~DAS) +\n  theme_bw() +\n  xlab(\"Nome da vari√°vel no eixo X (DAS)\") +\n  ylab(\"Nome da vari√°vel no eixo Y (MAP)\")\n\n\n\n\n\n\n\n  # stat_pvalue_manual(teste, tip.length = 0, hide.ns = TRUE)"
  },
  {
    "objectID": "graficos.html#gr√°fico-de-barras-e-erros",
    "href": "graficos.html#gr√°fico-de-barras-e-erros",
    "title": "Construindo Gr√°ficos",
    "section": "Gr√°fico de barras e erros",
    "text": "Gr√°fico de barras e erros\n\nModelo 1\n\n\ndados |&gt; \n  # Realizar o agrupamento dos dados por FMICO e LIRRIG\n  group_by(FMICO, LIRRIG) |&gt; \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna CLOA dentro de cada grupo\n  get_summary_stats(CLOA, type = \"mean_se\") |&gt; \n  \n  # Criar o gr√°fico de barras com barras de erro\n  ggplot(aes(x = FMICO, y = mean, fill = LIRRIG)) +\n  # Adicionar as barras de dados\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  # Adicionar as barras de erro\n  geom_errorbar(aes(ymax = mean + se, ymin = mean - se), \n                position = position_dodge(0.9), width = 0.2)+\n  # Definir estilo do gr√°fico\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\nModelo 2\n\nAlterando t√≠tulo dos eixos X e Y e alterando cores das barras:\n\ndados |&gt; \n  # Realizar o agrupamento dos dados por FMICO e LIRRIG\n  group_by(FMICO, LIRRIG) |&gt; \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna CLOA dentro de cada grupo\n  get_summary_stats(CLOA, #Selcionar a vari√°vel\n                    type = \"mean_se\") |&gt; #definir o tipo de estat√≠stica (m√©dia¬±erro-padr√£o)\n  \n  # Criar o gr√°fico de barras com barras de erro\n  ggplot(aes(x = FMICO, y = mean, fill = LIRRIG)) +\n  \n  # Adicionar as barras de dados\n  geom_bar(stat = \"identity\", #define que a altura das barras seja a m√©dia\n           position = \"dodge\", #define que as barras fiquem lado a lado\n           color = \"black\") + #Adiciona cotorno preto √†s barras\n  \n  # Escolha as cores das barras manualmente (pode usar nome da cor ou c√≥digo hexadecimal)\n    scale_fill_manual(values = c(\"red\", \"#555555\", \"#ffffff\")) +  \n  \n  # Adicionar as barras de erro\n  geom_errorbar(aes(ymax = mean + se, ymin = mean - se), \n                position = position_dodge(0.9), width = 0.2)+\n  # Definir estilo do gr√°fico\n  theme_bw()+\n  \n  #Altera t√≠tulo do eixo X\n  xlab(\"Nome da vari√°vel FMICO\")+\n  \n  #Altera t√≠tulo do eixo Y\n  ylab(\"Nome da vari√°vel CLOA\")\n\n\n\n\n\n\n\n\n\n\n\nModelo 3\n\nAdicionado letras nas barras:\n\ndados |&gt; \n  # Realizar o agrupamento dos dados por FMICO e LIRRIG\n  group_by(FMICO, LIRRIG) |&gt; \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna CLOA dentro de cada grupo\n  get_summary_stats(CLOA, #Selcionar a vari√°vel\n                    type = \"mean_se\") |&gt; #definir o tipo de estat√≠stica (m√©dia¬±erro-padr√£o)\n  \n  # Criar o gr√°fico de barras com barras de erro\n  ggplot(aes(x = FMICO, y = mean, fill = LIRRIG)) +\n  \n  # Adicionar as barras de dados\n  geom_bar(stat = \"identity\", #define que a altura das barras seja a m√©dia\n           position = \"dodge\", #define que as barras fiquem lado a lado\n           color = \"black\") + #Adiciona cotorno preto √†s barras\n  \n  # Escolha as cores das barras manualmente (pode usar nome da cor ou c√≥digo hexadecimal)\n    scale_fill_manual(values = c(\"red\", \"#555555\", \"#ffffff\")) +  \n  \n  # Adicionar as barras de erro\n  geom_errorbar(aes(ymax = mean + se, ymin = mean - se), \n                position = position_dodge(0.9), width = 0.2)+\n  # Definir estilo do gr√°fico\n  theme_bw()+\n  \n  #Altera t√≠tulo do eixo X\n  xlab(\"Nome da vari√°vel FMICO\")+\n  \n  #Altera t√≠tulo do eixo Y\n  ylab(\"Nome da vari√°vel CLOA\")+\n  \n  ylim(0,50)+ #AUmentando a escala de Y para caber as letras no gr√°fico\n\n  # Adiocionar letras acima das barras\n  geom_text(aes(label = c(\n    \"a\",#1\n    \"b\",#2\n    \"c\",#3\n    \"d\",#4\n    \"e\",#5\n    \"f\",#6\n    \"g\",#7\n    \"h\",#8\n    \"i\" #9\n    \n    )),position = position_dodge(1), vjust = -1)\n\n\n\n\n\n\n\n\n\n\n\nModelo 4\n\nReduzindo a escala do gr√°fica\n\n\ndados |&gt; \n  # Realizar o agrupamento dos dados por FMICO e LIRRIG\n  group_by(FMICO, LIRRIG) |&gt; \n  # Calcular as estat√≠sticas resumidas (m√©dia e erro padr√£o) para a coluna CLOA dentro de cada grupo\n  get_summary_stats(CLOA, #Selcionar a vari√°vel\n                    type = \"mean_se\") |&gt; #definir o tipo de estat√≠stica (m√©dia¬±erro-padr√£o)\n  \n  # Criar o gr√°fico de barras com barras de erro\n  ggplot(aes(x = FMICO, y = mean, fill = LIRRIG)) +\n  \n  # Adicionar as barras de dados\n  geom_bar(stat = \"identity\", #define que a altura das barras seja a m√©dia\n           position = \"dodge\", #define que as barras fiquem lado a lado\n           color = \"black\") + #Adiciona cotorno preto √†s barras\n  \n  # Escolha as cores das barras manualmente (pode usar nome da cor ou c√≥digo hexadecimal)\n    scale_fill_manual(values = c(\"red\", \"#555555\", \"#ffffff\")) +  \n  \n  # Adicionar as barras de erro\n  geom_errorbar(aes(ymax = mean + se, ymin = mean - se), \n                position = position_dodge(0.9), width = 0.2)+\n  # Definir estilo do gr√°fico\n  theme_bw()+\n  \n  #Altera t√≠tulo do eixo X\n  xlab(\"Nome da vari√°vel FMICO\")+\n  \n  #Altera t√≠tulo do eixo Y\n  ylab(\"Nome da vari√°vel CLOA\")+\n  \n  #Aumentando a escala de Y para caber as letras no gr√°fico\n  #Usando coord_cartesian para definir o range e n√£o subir as barras\n  coord_cartesian(ylim = c(20, 50))+ \n\n  # Adiocionar letras acima das barras\n  geom_text(aes(label = c(\n    \"a\",#1\n    \"b\",#2\n    \"c\",#3\n    \"d\",#4\n    \"e\",#5\n    \"f\",#6\n    \"g\",#7\n    \"h\",#8\n    \"i\" #9\n    \n    )),position = position_dodge(1), vjust = -1)"
  }
]