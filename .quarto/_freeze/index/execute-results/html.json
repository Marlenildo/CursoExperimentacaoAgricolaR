{
  "hash": "9c8e830aa0d854b379f012327d7b376d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"üìò Curso de Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola\"\nauthor: \"Marlenildo Melo\"\ndate: \"2025-08-21\"\nlang: \"pt-BR\"\nformat:\n  html:\n    theme: cosmo\n    include-in-header:\n      - text: |\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: true\n    toc_depth: 3\n    number_sections: true\n---\n\n\n\n\n# Apresenta√ß√£o do Curso {.tabset}\n\nEste material serve como guia para o curso **Estat√≠stica com R para Experimenta√ß√£o Agr√≠cola**.\\\nCada aula cont√©m **explica√ß√µes te√≥ricas resumidas** e **c√≥digos pr√°ticos** para serem executados no RStudio.\n\n## <i class=\"fa-brands fa-r-project\"></i> Estrutura do Curso {#estrutura-do-curso}\n\n### M√≥dulo 1 ‚Äì Introdu√ß√£o ao R e Organiza√ß√£o de Dados (Semanas 1-2)\n\n**Objetivo:** Familiarizar o aluno com R, RStudio e a prepara√ß√£o correta dos dados.\n\n#### Aula 1: Apresenta√ß√£o do curso + Instala√ß√£o do R e RStudio\n\n-   O que √© R e RStudio\n-   Instala√ß√£o passo a passo\n-   Estrutura do RStudio (console, script, environment, plots, packages)\n\n#### Aula 2: Primeiros passos no R\n\n-   Comandos b√°sicos\n-   Operadores aritm√©ticos e l√≥gicos\n-   Criando e manipulando objetos\n\n#### Aula 3: Instala√ß√£o e uso de pacotes\n\n-   `install.packages()`, `library()`\n-   Pacotes √∫teis: `tidyverse`, `readxl`, `agricolae`, `emmeans`, `broom`, `ggplot2`\n-   Como procurar ajuda e documenta√ß√£o\n\n#### Aula 4: Organiza√ß√£o de dados\n\n-   Como estruturar dados no Excel (linhas = observa√ß√µes, colunas = vari√°veis)\n-   Importa√ß√£o de arquivos (.csv, .xlsx, .txt)\n-   Uso de `read.csv()`, `readxl::read_excel()`, `read.table()`\n-   Verifica√ß√£o e limpeza dos dados (`head()`, `str()`, `summary()`)\n\n------------------------------------------------------------------------\n\n### M√≥dulo 2 ‚Äì Manipula√ß√£o e Explora√ß√£o de Dados (Semanas 3-4)\n\n**Objetivo:** Aprender a organizar, transformar e explorar dados antes da an√°lise.\n\n#### Aula 5: tidyverse para manipula√ß√£o\n\n-   `dplyr`: `select()`, `filter()`, `mutate()`, `summarise()`, `group_by()`\n-   `tidyr`: `pivot_longer()`, `pivot_wider()`\n\n#### Aula 6: Estat√≠stica descritiva\n\n-   M√©dias, desvios-padr√£o, erro-padr√£o\n-   Tabelas resumo com `dplyr`\n-   Visualiza√ß√µes iniciais: histogramas, boxplots, gr√°ficos de barras\n\n#### Aula 7: Gr√°ficos com ggplot2\n\n-   Estrutura do `ggplot2`\n-   Gr√°ficos b√°sicos aplicados a dados de experimenta√ß√£o agr√≠cola\n-   Personaliza√ß√£o de gr√°ficos\n\n#### Aula 8: Introdu√ß√£o aos delineamentos experimentais\n\n-   Delineamentos b√°sicos: DIC, DBC\n-   Estrutura dos dados em experimenta√ß√£o agr√≠cola\n-   Prepara√ß√£o dos dados no Excel para cada delineamento\n\n------------------------------------------------------------------------\n\n### M√≥dulo 3 ‚Äì An√°lise de Vari√¢ncia (ANOVA) (Semanas 5-8)\n\n**Objetivo:** Ensinar a rodar ANOVA, verificar pressupostos e interpretar resultados, utilizando diferentes pacotes.\n\n#### Aula 9: ANOVA em DIC\n\n-   Fun√ß√µes base: `aov()`\n-   ANOVA com `ExpDes.pt` (`dic()`)\n-   ANOVA com `easyanova`\n\n#### Aula 10: ANOVA em DBC\n\n-   Fun√ß√µes base: `aov()`\n-   ANOVA com `ExpDes.pt` (`dbc()`)\n-   Compara√ß√£o da sa√≠da entre pacotes\n\n#### Aula 11: Testes de pressupostos\n\n-   Normalidade dos res√≠duos: `shapiro.test()`, `rstatix::shapiro_test()`\n-   Homogeneidade: `bartlett.test()`, `car::leveneTest()`, `rstatix::levene_test()`\n-   Interpreta√ß√£o pr√°tica\n\n#### Aula 12: Testes de compara√ß√£o de m√©dias\n\n-   `TukeyHSD()` (base R)\n-   `ExpDes.pt` (j√° integrado √† ANOVA)\n-   `emmeans` + `cld()`\n-   `rstatix::t_test()` e `rstatix::anova_test()`\n\n#### Aula 13: ANOVA em esquemas fatoriais\n\n-   Dois fatores com `aov()`\n-   Dois fatores com `ExpDes.pt::fat2.dic()` e `fat2.dbc()`\n-   Interpreta√ß√£o das intera√ß√µes\n\n#### Aula 14: ANOVA em parcela subdividida\n\n-   Estrutura de dados\n-   `ExpDes.pt::psub2.dbc()` (ou fun√ß√µes equivalentes)\n-   Modelos mistos com `lme4::lmer()`\n\n#### Aula 15: Como reportar resultados da ANOVA\n\n-   `broom::tidy()` para organizar tabelas\n-   Exporta√ß√£o de resultados com `rstatix` (`get_anova_table()`)\n-   Apresenta√ß√£o de m√©dias e letras com `agricolae`, `emmeans` e `ExpDes.pt`\n\n#### Aula 16: Exerc√≠cios pr√°ticos comparando pacotes\n\n-   Mesmos dados analisados em `aov()`, `ExpDes.pt`, `easyanova` e `rstatix`\n-   Discuss√£o: qual usar em cada situa√ß√£o\n\n------------------------------------------------------------------------\n\n### M√≥dulo 4 ‚Äì Regress√£o e Modelos (Semanas 9-11)\n\n**Objetivo:** Introduzir regress√£o e aplica√ß√µes em experimenta√ß√£o agr√≠cola.\n\n#### Aula 17: Introdu√ß√£o √† regress√£o linear\n\n-   Conceito, ajuste com `lm()`\n-   Gr√°ficos de regress√£o no `ggplot2`\n\n#### Aula 18: Regress√£o polinomial\n\n-   `lm(y ~ poly(x, 2))`\n-   Aplica√ß√µes em curvas de dose, tempo, crescimento\n\n#### Aula 19: Sele√ß√£o de modelos\n\n-   Crit√©rios AIC e BIC\n-   Compara√ß√£o de modelos\n\n#### Aula 20: Regress√£o n√£o linear\n\n-   `nls()`\n-   Ajuste de curvas de resposta √† dose\n\n#### Aula 21: Regress√£o log√≠stica (ex.: dados de presen√ßa/aus√™ncia)\n\n-   `glm(family = binomial)`\n-   Exemplos em fitossanidade e sobreviv√™ncia\n\n#### Aula 22: Exerc√≠cios pr√°ticos de regress√£o com dados agr√≠colas\n\n------------------------------------------------------------------------\n\n### M√≥dulo 5 ‚Äì Encerramento e Projeto Final (Semana 12)\n\n**Objetivo:** Consolidar o aprendizado com aplica√ß√µes pr√°ticas.\n\n#### Aula 23: Como estruturar um relat√≥rio cient√≠fico no R\n\n-   Uso do RMarkdown\n-   Exportar para Word e PDF\n-   Organiza√ß√£o dos resultados\n\n#### Aula 24: Projeto final\n\nCada aluno analisa um banco de dados de experimenta√ß√£o agr√≠cola.\n\n#### Entrega de relat√≥rio com:\n\n-   Estrutura dos dados\n-   ANOVA + testes de m√©dias ou regress√£o\n-   Gr√°ficos e tabelas\n-   Interpreta√ß√£o\n\n------------------------------------------------------------------------\n\n### üìÖ Cronograma Resumido (Atualizado)\n\n-   **Semanas 1-2**: R, RStudio, pacotes, organiza√ß√£o/importa√ß√£o de dados\\\n-   **Semanas 3-4**: Manipula√ß√£o de dados, gr√°ficos, delineamentos\\\n-   **Semanas 5-8**: ANOVA com base R, `ExpDes.pt`, `easyanova` e `rstatix`\\\n-   **Semanas 9-11**: Regress√£o (linear, polinomial, n√£o linear, log√≠stica)\\\n-   **Semana 12**: Relat√≥rios e Projeto Final\n\n------------------------------------------------------------------------\n\n<br> <br>\n\n## <i class=\"fas fa-code\"></i> Exemplos de C√≥digos {#exemplos-de-c√≥digos}\n\n### üîπ M√≥dulo 1 ‚Äì Introdu√ß√£o ao R e Organiza√ß√£o de Dados\n\n#### Aula 1 ‚Äì Instala√ß√£o e primeiros passos\n\n-   Instale o R e o RStudio em seu computador.\\\n\nO **R** √© o programa principal, ou seja, a linguagem de programa√ß√£o e o ambiente de c√°lculo.  \n√â nele que todos os comandos s√£o processados e as an√°lises estat√≠sticas s√£o realizadas.  \nPor isso, o primeiro passo √© instalar o R no computador.  \nO download deve ser feito diretamente no site oficial do CRAN (Comprehensive R Archive Network):  \n\n<i class=\"fa-brands fa-r-project\"></i> [https://cran.r-project.org/](https://cran.r-project.org/)\n\nAo abrir o link, basta escolher o sistema operacional do seu computador (Windows, macOS ou Linux) e seguir as instru√ß√µes de instala√ß√£o.  \nCom isso, voc√™ j√° ter√° o R funcionando, embora a sua interface seja bastante simples e pouco intuitiva para quem est√° come√ßando.\n\n√â justamente nesse ponto que entra o **RStudio**.  \nO RStudio n√£o √© um programa separado do R, mas sim uma **IDE (Integrated Development Environment)**, ou seja, um ambiente de desenvolvimento que facilita o uso do R.  \nEle oferece uma interface gr√°fica amig√°vel, onde voc√™ pode escrever c√≥digos, visualizar gr√°ficos, organizar projetos e instalar pacotes com muito mais facilidade.  \n\nNo entanto, √© fundamental compreender que o RStudio **n√£o funciona sozinho**.  \nEle depende do R j√° instalado na m√°quina, pois √© o R quem executa de fato os c√°lculos.  \nPor isso, a ordem correta √©: primeiro instalar o R e, em seguida, instalar o RStudio.  \n\nO download do RStudio pode ser feito no site oficial da Posit (empresa respons√°vel pelo software):  \n\nüëâ [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)\n\nAo instalar os dois programas, voc√™ ter√° o **R** como motor de c√°lculo e o **RStudio** como painel de controle, trabalhando em conjunto.  \nEssa combina√ß√£o √© a mais utilizada no mundo acad√™mico e profissional para an√°lises estat√≠sticas e ci√™ncia de dados.\n\n\n-   Conhe√ßa os principais pain√©is do RStudio:\n    -   *Console* (execu√ß√£o de comandos)\\\n    -   *Source* (script)\\\n    -   *Environment/History* (objetos)\\\n    -   *Plots/Packages/Help*\n    \n\n**Verificando vers√£o do R**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Verificando vers√£o do R\nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               _                                \nplatform       x86_64-w64-mingw32               \narch           x86_64                           \nos             mingw32                          \ncrt            ucrt                             \nsystem         x86_64, mingw32                  \nstatus                                          \nmajor          4                                \nminor          5.1                              \nyear           2025                             \nmonth          06                               \nday            13                               \nsvn rev        88306                            \nlanguage       R                                \nversion.string R version 4.5.1 (2025-06-13 ucrt)\nnickname       Great Square Root                \n```\n\n\n:::\n:::\n\n\n\n**Citando o R**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cita√ß√£o do R\ncitation()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTo cite R in publications use:\n\n  R Core Team (2025). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  <https://www.R-project.org/>.\n\nUma entrada BibTeX para usu√°rios(as) de LaTeX √©\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2025},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n```\n\n\n:::\n:::\n\n\n\n**Opera√ß√µes simples**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Opera√ß√µes simples\n\n## Soma\n2 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\n## Subtra√ß√£o\n7 - 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\n## Mutiplica√ß√£o\n4 * 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12\n```\n\n\n:::\n\n```{.r .cell-code}\n## Divis√£o\n10 / 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.333333\n```\n\n\n:::\n\n```{.r .cell-code}\n## Raiz quadrada\nsqrt(25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 2 ‚Äì Objetos no R\n\nNesta aula, aprendemos a criar e manipular objetos no R. Objetos s√£o vari√°veis que armazenam valores ou resultados de c√°lculos, permitindo que possamos reutiliz√°-los em outras opera√ß√µes.\n\nNo exemplo apresentado, criamos dois objetos num√©ricos:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criando objetos\nx <- 5\ny <- 10\n```\n:::\n\n\n\n\nAqui, x recebe o valor 5 e y recebe o valor 10. Em seguida, criamos um terceiro objeto chamado soma, que armazena a soma de x e y:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsoma <- x + y\nsoma\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n:::\n\n\n\nAo digitar apenas soma, o R retorna o valor armazenado neste objeto, que neste caso √© 15.\n\nEste exemplo ilustra a forma b√°sica de criar objetos no R e realizar opera√ß√µes simples com eles, fundamental para qualquer an√°lise de dados ou programa√ß√£o no software.\n\n------------------------------------------------------------------------\n\n#### Aula 3 ‚Äì Pacotes\n\nNo R, os pacotes s√£o conjuntos de fun√ß√µes, dados e recursos que estendem as capacidades b√°sicas do software, permitindo realizar an√°lises mais complexas de forma pr√°tica e eficiente.\n\nNo exemplo abaixo, veja como instalar alguns pacotes importantes um de cada vez:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregando pacotes\ninstall.packages(\"tidyverse\")   # Para manipula√ß√£o e visualiza√ß√£o de dados\ninstall.packages(\"readxl\")      # Para ler arquivos do Excel\ninstall.packages(\"ExpDes.pt\")   # Para planejamento e an√°lise de experimentos agr√≠colas\ninstall.packages(\"easyanova\")   # Para facilitar an√°lises de vari√¢ncia\ninstall.packages(\"rstatix\")     # Para estat√≠sticas descritivas e testes inferenciais\n```\n:::\n\n\n\nOuse preferir pode instalar v√°rios de uma √∫nica vez:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregando pacotes\ninstall.packages(\"tidyverse\", \"readxl\", \"ExpDes.pt\", \"easyanova\", \"rstatix\")\n```\n:::\n\n\n\n\nNo exemplo abaixo, carregamos alguns pacotes importantes:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregando pacotes\nlibrary(tidyverse)   # Para manipula√ß√£o e visualiza√ß√£o de dados\nlibrary(readxl)      # Para ler arquivos do Excel\nlibrary(ExpDes.pt)   # Para planejamento e an√°lise de experimentos agr√≠colas\nlibrary(easyanova)   # Para facilitar an√°lises de vari√¢ncia\nlibrary(rstatix)     # Para estat√≠sticas descritivas e testes inferenciais\n```\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 4 ‚Äì Importa√ß√£o de Dados\n\n**Importando dados**\n\nImportar dados para o R √© um passo fundamental para qualquer an√°lise.\nNo R, √© poss√≠vel importar dados de diferentes formatos, o que √© essencial para iniciar qualquer an√°lise.\nO R permite ler diferentes formatos de arquivos, como CSV e Excel.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Importando CSV\n# dados_csv <- read.csv(\"meus_dados.csv\", sep = \";\", dec = \",\")\n# L√™ arquivos CSV, permitindo especificar o separador de colunas (sep) e o separador decimal (dec)\n\n# Importando Excel\n# dados_excel <- readxl::read_excel(\"meus_dados.xlsx\")\n# L√™ planilhas do Excel diretamente para o R\n\n# Importando arquivo de texto (TXT)\n# dados_txt <- read.table(\"meus_dados.txt\", header = TRUE, sep = \"\\t\", dec = \".\")\n# L√™ arquivos de texto, onde 'header = TRUE' indica que a primeira linha cont√©m os nomes das colunas,\n# 'sep = \"\\t\"' indica que as colunas s√£o separadas por tabula√ß√£o, e 'dec = \".\"' define o separador decimal\n```\n:::\n\n\n\n\n- `read.csv()` l√™ arquivos no formato CSV (Comma-Separated Values), permitindo especificar o separador de colunas (sep) e o separador decimal (dec). √â indicado para planilhas exportadas como CSV ou dados gerados por outros programas.\n\n- `read_excel()` (do pacote `readxl`) l√™ arquivos do Excel (.xls ou .xlsx) diretamente, mantendo nomes das colunas e tipos de dados corretamente, o que facilita a importa√ß√£o de planilhas complexas sem precisar convert√™-las.\n\n- `read.table()` l√™ arquivos de texto simples (TXT ou outros delimitados), oferecendo flexibilidade para especificar se h√° cabe√ßalho (header = TRUE), o separador de colunas (sep) e o separador decimal (dec). √â ideal para arquivos de texto com diferentes formatos de separa√ß√£o.\n\n\n\n**Visualizando os dados**\n\nAp√≥s a importa√ß√£o, podemos visualizar os dados para verificar se foram carregados corretamente:\nAp√≥s a importa√ß√£o, √© importante visualizar os dados para conferir se foram carregados corretamente. \nPara isso, podem ser usadas fun√ß√µes como:\n\n- `head()` (exibe as primeiras linhas), \n- `summary()` (mostra resumo estat√≠stico das vari√°veis), \n- `str()` (mostra a estrutura do objeto) e \n- `glimpse()` (exibe de forma compacta e leg√≠vel a estrutura e os tipos das vari√°veis).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# head(dados_csv)    # Mostra as primeiras linhas do conjunto de dados\n# summary(dados_csv) # Mostra um resumo estat√≠stico das vari√°veis\n# str(dados_csv)     # Mostra a estrutura do objeto, incluindo tipos de vari√°veis e dimens√µes\n# glimpse(dados_csv)  # Mostra todas as vari√°veis, seus tipos e algumas observa√ß√µes de cada coluna\n```\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n### üîπ M√≥dulo 2 ‚Äì Manipula√ß√£o e Explora√ß√£o de Dados\n\n  \n#### Aula 5 ‚Äì Tipos de Vari√°veis em R\n\n\n1. **Vari√°veis num√©ricas**\n   - **Cont√≠nuas (`numeric` / `dbl`)**: podem assumir qualquer valor dentro de um intervalo, incluindo decimais.  \n        **Exemplo:** Produtividade (t/ha), √Årea (m¬≤)\n   - **Discretas (`integer` / `int`)**: assumem apenas valores inteiros.  \n        **Exemplo:** Parcela (identificador das parcelas)\n\n2. **Vari√°veis categ√≥ricas (fatores) (`factor` / `fct`)**\n   - Representam categorias ou grupos que o R reconhece para an√°lises estat√≠sticas.  \n        **Exemplo:** Tratamento, Variedade  \n   - Ideais para an√°lise de vari√¢ncia e compara√ß√µes entre grupos\n\n3. **Vari√°veis de texto (`character` / `chr`)**\n   - Cont√™m informa√ß√µes textuais ou descritivas, que n√£o t√™m ordem ou significado num√©rico.  \n        **Exemplo:** Local (Norte, Sul, Leste)  \n   - N√£o s√£o usadas diretamente em c√°lculos estat√≠sticos, mas servem para identificar ou agrupar dados\n\n4. **Vari√°veis l√≥gicas (`logical` / `logi`)**\n   - Assumem apenas dois valores: `TRUE` ou `FALSE`  \n        **Exemplo:** Irrigado  \n   - √öteis para condi√ß√µes, filtros e an√°lises condicionais\n\n5. **Outros tipos dispon√≠veis em R**\n   - **Complexo (`complex` / sem abrevia√ß√£o comum)**: n√∫meros complexos, como `1+2i`\n   - **Raw (`raw` / sem abrevia√ß√£o comum)**: representa dados brutos em bytes  \n   - **Date (`Date` / sem abrevia√ß√£o comum)**: datas no formato `\"YYYY-MM-DD\"`  \n   - **POSIXct / POSIXlt (`POSIXct` / `POSIXlt`)**: datas e horas com tempo\n   - **Ordered factor (`ordered` / `ord`)**: fatores com ordem natural definida\n\n---\n\n\nNeste exemplo, iremos **criar vari√°veis de diferentes tipos** em R ‚Äî num√©ricas cont√≠nuas, num√©ricas discretas e categ√≥ricas (fatores) ‚Äî e, em seguida, **identificar o tipo de cada vari√°vel** usando a fun√ß√£o `class()`.  \n\nIsso nos permite compreender como o R armazena cada tipo de dado e como ele ser√° tratado em an√°lises estat√≠sticas.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Num√©rica cont√≠nua\nnum_cont <- 3.5      # numeric / dbl\nclass(num_cont) # Checando classes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Num√©rica discreta\nnum_disc <- 5L       # integer / int\nclass(num_disc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Fator (categ√≥rica)\ntrat <- factor(c(\"T1\", \"T2\", \"T3\"))  # factor / fct\nclass(trat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"factor\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Ordered factor\nord_trat <- factor(c(\"Baixo\", \"M√©dio\", \"Alto\"), ordered = TRUE) # ordered / ord\nclass(ord_trat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ordered\" \"factor\" \n```\n\n\n:::\n\n```{.r .cell-code}\n# Character\nlocal <- c(\"Norte\", \"Sul\")  # character / chr\nclass(local)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# L√≥gica\nirr <- c(TRUE, FALSE)       # logical / logi\nclass(irr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Complexo\ncplx <- 1 + 2i              # complex\nclass(cplx)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"complex\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Raw\nr <- charToRaw(\"A\")         # raw\nclass(r)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"raw\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Datas\nd <- as.Date(\"2025-08-29\")  # Date\nclass(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Date\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndt <- as.POSIXct(\"2025-08-29 12:00:00\") # POSIXct\nclass(dt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"POSIXct\" \"POSIXt\" \n```\n\n\n:::\n:::\n\n\n\n<br>\n\n**Criando banco de dados fict√≠cio**\n\nNeste exemplo, iremos **criar um banco de dados fict√≠cio de um experimento agr√≠cola** com diferentes tipos de vari√°veis: num√©ricas (cont√≠nuas e discretas), categ√≥ricas, l√≥gicas e de texto.  \n\nEm seguida, iremos **visualizar o banco de dados e identificar os tipos de vari√°veis**, para entender como o R armazena cada tipo e como podemos manipul√°-las em an√°lises estat√≠sticas.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exemplo de banco de dados de experimento agr√≠cola\ndados_agro <- data.frame(\n  Parcela = 1:9,                               # Num√©rica discreta (identifica√ß√£o das parcelas)\n  Tratamento = factor(rep(c(\"T1\", \"T2\", \"T3\"), each = 3)), # Fator (categ√≥rica nominal)\n  Variedade = factor(c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\")), # Fator (categ√≥rica nominal)\n  Area = c(10, 10, 10, 12, 12, 12, 11, 11, 11),  # Num√©rica cont√≠nua (m¬≤)\n  Produtividade = c(30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5), # Num√©rica cont√≠nua (t/ha)\n  Irrigado = c(TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE),   # L√≥gica\n  Local = c(\"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\", \"Leste\", \"Leste\") # Texto (character)\n)\n```\n:::\n\n\n\n\n<br>\n\n**Fun√ß√µes para Visualiza√ß√£o e Estrutura de Dados no R**\n\n\n1. **`head(dados_agro)`**  \n   Mostra as **primeiras linhas** do conjunto de dados.  \n   - √ötil para ter uma **vis√£o r√°pida** do conte√∫do do banco, verificando se os dados foram importados corretamente.  \n   - Exemplo de sa√≠da:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dados_agro)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Parcela Tratamento Variedade Area Produtividade Irrigado Local\n1       1         T1         A   10          30.5     TRUE Norte\n2       2         T1         A   10          32.0     TRUE Norte\n3       3         T1         A   10          31.0     TRUE Norte\n4       4         T2         B   12          28.0    FALSE   Sul\n5       5         T2         B   12          29.5    FALSE   Sul\n6       6         T2         B   12          30.0    FALSE   Sul\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n2. **`str(dados_agro)`**  \n\nMostra a **estrutura do objeto**, permitindo entender rapidamente como os dados est√£o organizados no R.\n\nCom essa fun√ß√£o, √© poss√≠vel:\n\n   - Ver o **n√∫mero de observa√ß√µes** (linhas) e o **n√∫mero de vari√°veis** (colunas) do banco de dados, por exemplo, `9 obs. of 7 variables`.  \n   - Identificar o **tipo de cada vari√°vel**, como `int` (inteiro), `num` (num√©rico cont√≠nuo), `Factor` (categ√≥rica), `logi` (l√≥gica/boolean) e `chr` (texto).  \n   - Conferir **alguns valores iniciais de cada coluna**, ajudando a verificar se os dados foram importados corretamente e se os tipos est√£o adequados para an√°lise.  \n\nEm resumo, `str()` √© uma fun√ß√£o essencial para **inspecionar rapidamente a estrutura e os tipos das vari√°veis**, antes de realizar qualquer an√°lise estat√≠stica ou manipula√ß√£o dos dados.\n\n\n   \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(dados_agro)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t9 obs. of  7 variables:\n $ Parcela      : int  1 2 3 4 5 6 7 8 9\n $ Tratamento   : Factor w/ 3 levels \"T1\",\"T2\",\"T3\": 1 1 1 2 2 2 3 3 3\n $ Variedade    : Factor w/ 3 levels \"A\",\"B\",\"C\": 1 1 1 2 2 2 3 3 3\n $ Area         : num  10 10 10 12 12 12 11 11 11\n $ Produtividade: num  30.5 32 31 28 29.5 30 33 34.5 32.5\n $ Irrigado     : logi  TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ Local        : chr  \"Norte\" \"Norte\" \"Norte\" \"Sul\" ...\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n\n   \n3. **`summary(dados_agro)`**  \n\nMostra um **resumo estat√≠stico** das vari√°veis:  \n   - Para vari√°veis num√©ricas: m√≠nimo, m√°ximo, m√©dia, quartis  \n   - Para fatores: contagem de cada n√≠vel  \n   - Para l√≥gicas: contagem de `TRUE` e `FALSE`  \n   - √ötil para identificar tend√™ncias, valores extremos e distribui√ß√£o dos dados.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dados_agro)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Parcela  Tratamento Variedade      Area    Produtividade    Irrigado      \n Min.   :1   T1:3       A:3       Min.   :10   Min.   :28.00   Mode :logical  \n 1st Qu.:3   T2:3       B:3       1st Qu.:10   1st Qu.:30.00   FALSE:3        \n Median :5   T3:3       C:3       Median :11   Median :31.00   TRUE :6        \n Mean   :5                        Mean   :11   Mean   :31.22                  \n 3rd Qu.:7                        3rd Qu.:12   3rd Qu.:32.50                  \n Max.   :9                        Max.   :12   Max.   :34.50                  \n    Local          \n Length:9          \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\n\n<br>\n\n4. **`glimpse(dados_agro)`** (do pacote `dplyr`)  \n\nMostra a **estrutura dos dados de forma compacta e leg√≠vel**, similar ao `str()`, mas em formato horizontal:  \n\n   - Exibe todas as vari√°veis, seus tipos e algumas observa√ß√µes iniciais  \n   - Mais f√°cil de ler quando o banco de dados tem muitas colunas  \n\nExemplo de sa√≠da (resumida):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dados_agro)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 9\nColumns: 7\n$ Parcela       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9\n$ Tratamento    <fct> T1, T1, T1, T2, T2, T2, T3, T3, T3\n$ Variedade     <fct> A, A, A, B, B, B, C, C, C\n$ Area          <dbl> 10, 10, 10, 12, 12, 12, 11, 11, 11\n$ Produtividade <dbl> 30.5, 32.0, 31.0, 28.0, 29.5, 30.0, 33.0, 34.5, 32.5\n$ Irrigado      <lgl> TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE\n$ Local         <chr> \"Norte\", \"Norte\", \"Norte\", \"Sul\", \"Sul\", \"Sul\", \"Leste\",‚Ä¶\n```\n\n\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 5 ‚Äì Manipula√ß√£o com dplyr\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exemplo fict√≠cio\ndados <- data.frame(\n  tratamento = rep(c(\"T1\", \"T2\", \"T3\"), each = 4),\n  repeticao = rep(1:4, 3),\n  produtividade = c(30, 32, 28, 31, 35, 36, 34, 37, 25, 27, 26, 28)\n)\n\n# Selecionar colunas e filtrar\ndados %>% select(tratamento, produtividade) %>% filter(produtividade > 30)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tratamento produtividade\n1         T1            32\n2         T1            31\n3         T2            35\n4         T2            36\n5         T2            34\n6         T2            37\n```\n\n\n:::\n\n```{.r .cell-code}\n# Resumo estat√≠stico\ndados %>%\n  group_by(tratamento) %>%\n  summarise(\n    media = mean(produtividade),\n    sd = sd(produtividade)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 3\n  tratamento media    sd\n  <chr>      <dbl> <dbl>\n1 T1          30.2  1.71\n2 T2          35.5  1.29\n3 T3          26.5  1.29\n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 6 ‚Äì Estat√≠stica Descritiva e Gr√°ficos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histograma\nggplot(dados, aes(x = produtividade)) +\n  geom_histogram(binwidth = 2, fill = \"skyblue\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Boxplot\nggplot(dados, aes(x = tratamento, y = produtividade)) +\n  geom_boxplot(fill = \"orange\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n### üîπ M√≥dulo 3 ‚Äì An√°lise de Vari√¢ncia (ANOVA)\n\n#### Aula 9 ‚Äì ANOVA em DIC\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ANOVA usando aov()\nmodelo <- aov(produtividade ~ tratamento, data = dados)\nsummary(modelo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ntratamento   2 163.50   81.75   39.24 3.59e-05 ***\nResiduals    9  18.75    2.08                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# ANOVA usando ExpDes.pt\ndic(\n  trat = dados$tratamento,\n  resp = dados$produtividade,\n  quali = TRUE,\n  mcomp = \"tukey\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n------------------------------------------------------------------------\nQuadro da analise de variancia\n------------------------------------------------------------------------\n           GL     SQ     QM    Fc      Pr>Fc\nTratamento  2 163.50 81.750 39.24 3.5934e-05\nResiduo     9  18.75  2.083                 \nTotal      11 182.25                        \n------------------------------------------------------------------------\nCV = 4.69 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos ( Shapiro-Wilk ) \nValor-p:  0.5375769 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\n------------------------------------------------------------------------\nTeste de homogeneidade de variancia \nvalor-p:  0.8663487 \nDe acordo com o teste de bartlett a 5% de significancia, as variancias podem ser consideradas homogeneas.\n------------------------------------------------------------------------\n\nTeste de Tukey\n------------------------------------------------------------------------\nGrupos Tratamentos Medias\na \t T2 \t 35.5 \n b \t T1 \t 30.25 \n  c \t T3 \t 26.5 \n------------------------------------------------------------------------\n```\n\n\n:::\n\n```{.r .cell-code}\n# ANOVA usando easyanova\neasyanova::ea1(dados[-2], design = 1, plot = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Analysis of variance`\n           df type I SS mean square F value    p>F\ntreatments  2    163.50     81.7500   39.24 <0.001\nResiduals   9     18.75      2.0833       -      -\n\n$Means\n  treatment  mean     sd    sem min max tukey snk duncan t scott_knott\n1        T2 35.50 1.2910 0.7217  34  37     a   a      a a           a\n2        T1 30.25 1.7078 0.7217  28  32     b   b      b b           b\n3        T3 26.50 1.2910 0.7217  25  28     c   c      c c           c\n\n$`Multiple comparison test`\n     pair contrast p(tukey) p(snk) p(duncan)   p(t)\n1 T2 - T1     5.25   0.0016 0.0006    0.0006 0.0006\n2 T2 - T3     9.00   0.0000 0.0000    0.0000 0.0000\n3 T1 - T3     3.75   0.0128 0.0051    0.0051 0.0051\n\n$`Residual analysis`\n$`Residual analysis`$`residual analysis`\n                             values\np.value Shapiro-Wilk test    0.5376\np.value Bartlett test        0.8663\ncoefficient of variation (%) 4.6900\nfirst value most discrepant  3.0000\nsecond value most discrepant 2.0000\nthird value most discrepant  8.0000\n\n$`Residual analysis`$residuals\n    1     2     3     4     5     6     7     8     9    10    11    12 \n-0.25  1.75 -2.25  0.75 -0.50  0.50 -1.50  1.50 -1.50  0.50 -0.50  1.50 \n\n$`Residual analysis`$`standardized residuals`\n         1          2          3          4          5          6          7 \n-0.1914854  1.3403980 -1.7233688  0.5744563 -0.3829708  0.3829708 -1.1489125 \n         8          9         10         11         12 \n 1.1489125 -1.1489125  0.3829708 -0.3829708  1.1489125 \n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 11 ‚Äì Testes de Pressupostos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Normalidade\nshapiro.test(residuals(modelo))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  residuals(modelo)\nW = 0.94298, p-value = 0.5376\n```\n\n\n:::\n\n```{.r .cell-code}\ndados |> group_by(tratamento) |> rstatix::shapiro_test(produtividade)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 4\n  tratamento variable      statistic     p\n  <chr>      <chr>             <dbl> <dbl>\n1 T1         produtividade     0.971 0.850\n2 T2         produtividade     0.993 0.972\n3 T3         produtividade     0.993 0.972\n```\n\n\n:::\n\n```{.r .cell-code}\n# Homogeneidade\nbartlett.test(produtividade ~ tratamento, data = dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  produtividade by tratamento\nBartlett's K-squared = 0.28694, df = 2, p-value = 0.8663\n```\n\n\n:::\n\n```{.r .cell-code}\nrstatix::levene_test(produtividade ~ tratamento, data = dados)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 √ó 4\n    df1   df2 statistic     p\n  <int> <int>     <dbl> <dbl>\n1     2     9     0.158 0.856\n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 12 ‚Äì Compara√ß√µes de M√©dias\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tukey no R base\nTukeyHSD(modelo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = produtividade ~ tratamento, data = dados)\n\n$tratamento\n       diff        lwr        upr     p adj\nT2-T1  5.25   2.400421  8.0995788 0.0015767\nT3-T1 -3.75  -6.599579 -0.9004212 0.0127984\nT3-T2 -9.00 -11.849579 -6.1504212 0.0000269\n```\n\n\n:::\n\n```{.r .cell-code}\n# Emmeans\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n```\n\n\n:::\n\n```{.r .cell-code}\nemmeans(modelo, pairwise ~ tratamento)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$emmeans\n tratamento emmean    SE df lower.CL upper.CL\n T1           30.2 0.722  9     28.6     31.9\n T2           35.5 0.722  9     33.9     37.1\n T3           26.5 0.722  9     24.9     28.1\n\nConfidence level used: 0.95 \n\n$contrasts\n contrast estimate   SE df t.ratio p.value\n T1 - T2     -5.25 1.02  9  -5.144  0.0016\n T1 - T3      3.75 1.02  9   3.674  0.0128\n T2 - T3      9.00 1.02  9   8.818  <.0001\n\nP value adjustment: tukey method for comparing a family of 3 estimates \n```\n\n\n:::\n\n```{.r .cell-code}\n# rstatix\ndados %>% anova_test(produtividade ~ tratamento)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nANOVA Table (type II tests)\n\n      Effect DFn DFd     F        p p<.05   ges\n1 tratamento   2   9 39.24 3.59e-05     * 0.897\n```\n\n\n:::\n\n```{.r .cell-code}\ndados %>% tukey_hsd(produtividade ~ tratamento)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 9\n  term       group1 group2 null.value estimate conf.low conf.high     p.adj\n* <chr>      <chr>  <chr>       <dbl>    <dbl>    <dbl>     <dbl>     <dbl>\n1 tratamento T1     T2              0     5.25     2.40     8.10  0.00158  \n2 tratamento T1     T3              0    -3.75    -6.60    -0.900 0.0128   \n3 tratamento T2     T3              0    -9      -11.8     -6.15  0.0000269\n# ‚Ñπ 1 more variable: p.adj.signif <chr>\n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n#### Aula 13 ‚Äì ANOVA Fatorial\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exemplo com dois fatores\ndados2 <- expand.grid(\n  adubacao = c(\"A1\", \"A2\"),\n  cultivar = c(\"C1\", \"C2\", \"C3\"),\n  rep = 1:4\n)\nset.seed(123)\ndados2$produtividade <- rnorm(24, mean = 30, sd = 3)\n\n# ANOVA\nmodelo2 <- aov(produtividade ~ adubacao * cultivar, data = dados2)\nsummary(modelo2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Df Sum Sq Mean Sq F value Pr(>F)\nadubacao           1   2.09   2.089   0.217  0.647\ncultivar           2   1.07   0.536   0.056  0.946\nadubacao:cultivar  2  13.72   6.861   0.712  0.504\nResiduals         18 173.43   9.635               \n```\n\n\n:::\n\n```{.r .cell-code}\n# ExpDes.pt\nfat2.dic(\n  fator1 = dados2$adubacao,\n  fator2 = dados2$cultivar,\n  resp = dados2$produtividade,\n  quali = c(TRUE, TRUE),\n  mcomp = \"tukey\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n------------------------------------------------------------------------\nLegenda:\nFATOR 1:  F1 \nFATOR 2:  F2 \n------------------------------------------------------------------------\n\n\nQuadro da analise de variancia\n------------------------------------------------------------------------\n        GL      SQ QM      Fc   Pr>Fc\nF1       1   2.089  3 0.21680 0.64708\nF2       2   1.073  2 0.05566 0.94602\nF1*F2    2  13.723  4 0.71212 0.50391\nResiduo 18 173.435  5                \nTotal   23 190.319  1                \n------------------------------------------------------------------------\nCV = 10.36 %\n\n------------------------------------------------------------------------\nTeste de normalidade dos residuos (Shapiro-Wilk)\nvalor-p:  0.6606527 \nDe acordo com o teste de Shapiro-Wilk a 5% de significancia, os residuos podem ser considerados normais.\n------------------------------------------------------------------------\n\nInteracao nao significativa: analisando os efeitos simples\n------------------------------------------------------------------------\nF1\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     A1 30.26899\n2     A2 29.67895\n------------------------------------------------------------------------\nF2\nDe acordo com o teste F, as medias desse fator sao estatisticamente iguais.\n------------------------------------------------------------------------\n  Niveis   Medias\n1     C1 29.67946\n2     C2 30.16574\n3     C3 30.07672\n------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n### üîπ M√≥dulo 4 ‚Äì Regress√£o\n\n#### Aula 17 ‚Äì Regress√£o Linear\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndose <- c(0, 50, 100, 150, 200)\nprod <- c(20, 28, 35, 40, 38)\ndados_reg <- data.frame(dose, prod)\n\nmodelo_reg <- lm(prod ~ dose, data = dados_reg)\na <- summary(modelo_reg)\n\n# Coeficientes\ncoeficientes <- coef(modelo_reg)\nintercepto <- round(coeficientes[1], 2) # sem sinal extra\nslope <- formatC(coeficientes[2], format = \"f\", digits = 2, flag = \"+\") # sempre com sinal\n\n# Estat√≠sticas do modelo\nr2 <- round(a$r.squared, 4)\nf_value <- a$fstatistic[1]\ndf1 <- a$fstatistic[2]\ndf2 <- a$fstatistic[3]\np_value_anova <- pf(f_value, df1, df2, lower.tail = FALSE)\n\n\n\n\n# Equa√ß√£o no formato correto\nequacao <- paste0(\"y = \", intercepto, slope, \"x\")\n\nlegenda <- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", f_value,\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n\n\ndados_reg |>\n  ggplot(aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  annotate(\"text\",\n           x = 100, y = 10,\n           label = legenda,\n           hjust = 0, size = 5) +\n  labs(x = \"Frequ√™ncia de irriga√ß√£o\", y = \"CRA (%)\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n#### Aula 17 ‚Äì Regress√£o Quadr√°tica\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ajustar modelo de regress√£o quadr√°tica\nmodelo_quad <- lm(prod ~ dose + I(dose^2), data = dados_reg)\na <- summary(modelo_quad)\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = prod ~ dose + I(dose^2), data = dados_reg)\n\nResiduals:\n      1       2       3       4       5 \n 0.5429 -0.9714 -0.3429  1.4286 -0.6571 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)   \n(Intercept) 19.4571429  1.3021176  14.943  0.00445 **\ndose         0.2217143  0.0308492   7.187  0.01882 * \nI(dose^2)   -0.0006286  0.0001479  -4.250  0.05116 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.384 on 2 degrees of freedom\nMultiple R-squared:  0.9858,\tAdjusted R-squared:  0.9715 \nF-statistic: 69.21 on 2 and 2 DF,  p-value: 0.01424\n```\n\n\n:::\n\n```{.r .cell-code}\n# Coeficientes da regress√£o quadr√°tica (com mais casas decimais)\ncoef_quad <- coef(modelo_quad)\nintercepto <- formatC(coef_quad[1], format = \"f\", digits = 4)\nlinear     <- formatC(coef_quad[2], format = \"f\", digits = 4, flag = \"+\")\nquadratico <- formatC(coef_quad[3], format = \"f\", digits = 4, flag = \"+\") \n# usei 6 casas para o termo quadr√°tico porque geralmente √© bem pequeno\n\n# Estat√≠sticas do modelo\nr2 <- round(a$r.squared, 4)\nf_value <- a$fstatistic[1]\ndf1 <- a$fstatistic[2]\ndf2 <- a$fstatistic[3]\np_value_anova <- pf(f_value, df1, df2, lower.tail = FALSE)\n\n# Equa√ß√£o para legenda\nequacao <- paste0(\"y = \", intercepto, \" \", linear, \"x \", quadratico, \"x¬≤\")\nlegenda <- paste0(\n  equacao,\n  \"  R¬≤ = \", r2,\n  \"\\nF = \", round(f_value, 2),\n  \"; p = \", format.pval(p_value_anova, digits = 4, eps = 0.001)\n)\n\n# Gr√°fico\nlibrary(ggplot2)\n\nregressao_quad <- ggplot(dados_reg, aes(x = dose, y = prod)) +\n  geom_point(size = 3) +\n  stat_smooth(\n    method = \"lm\",\n    formula = y ~ x + I(x^2),\n    se = FALSE,\n    color = \"black\"\n  ) +\n  annotate(\"text\", x = 50, y = 10, label = legenda, hjust = 0, size = 5) +\n  labs(x = \"Dose\", y = \"Produ√ß√£o\") +\n  theme_bw() +\n  theme(panel.grid = element_blank()) +\n  ylim(0, 50)\n\n# Exibir gr√°fico\nregressao_quad\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### üîπ M√≥dulo 5 ‚Äì Relat√≥rios e Projeto Final\n\n#### Aula 23 ‚Äì Relat√≥rios com RMarkdown\n\n-   Este pr√≥prio arquivo √© um exemplo.\\\n-   Pode ser exportado em HTML, Word ou PDF.\n\n------------------------------------------------------------------------\n\n### ‚úÖ Projeto Final\n\nAnalise um conjunto de dados agr√≠colas (real ou fornecido):\\\n- Estruture os dados no Excel/CSV.\\\n- Importe para o R.\\\n- Realize ANOVA (com `aov()`, `ExpDes.pt`, `easyanova` e `rstatix`).\\\n- Teste pressupostos.\\\n- Se necess√°rio, ajuste modelos de regress√£o.\\\n- Gere gr√°ficos com `ggplot2`.\\\n- Organize os resultados em relat√≥rio RMarkdown.\n\n------------------------------------------------------------------------\n\n<br>\n\n## <i class=\"fas fa-user\"></i> Quem Sou\n\nEngenheiro Agr√¥nomo, Doutor em Fitotecnia\n\n<i class=\"fa-solid fa-link\"></i> [Linktree](https://linktr.ee/marlenildomelo)\n\n<i class=\"fas fa-envelope\"></i> [marlenildo\\@gmail.com](mailto:marlenildo@gmail.com)\n\n<i class=\"fab fa-whatsapp\"></i> [(84) 98752-1095](https://wa.me/5584987521095)\n\n<br>\n\n------------------------------------------------------------------------\n\n**Links √öteis**:\n\n-   [Estrutura do Curso](#estrutura-do-curso)\n-   [Exemplos de C√≥digos](#exemplos-de-c√≥digos)\n\n<i class=\"fa-brands fa-r-project\"></i> *Este documento foi criado utilizando a pr√≥pria linguagem R.*\n\n------------------------------------------------------------------------",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}